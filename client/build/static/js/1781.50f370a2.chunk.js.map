{"version":3,"file":"static/js/1781.50f370a2.chunk.js","mappings":"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","sources":["pages/Blog.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from \"axios\";\r\nimport { \r\n  Box, Typography, Container, Grid, TextField, MenuItem, \r\n  FormControl, InputLabel, Select, Card, CardContent, CardMedia, \r\n  Chip, Button, CircularProgress, InputAdornment, Divider,\r\n  IconButton, Snackbar, Alert, Tooltip, Paper, ToggleButton,\r\n  ToggleButtonGroup, Fade, Zoom, Stack, Pagination\r\n} from '@mui/material';\r\nimport { \r\n  Search, ArrowForward, Refresh, Bookmark, BookmarkBorder,\r\n  Share, FiberNew, FilterAlt, ElectricBolt, Memory, Code, Explore, RssFeed\r\n} from '@mui/icons-material';\r\nimport '../styles/Blog.css';\r\nimport URLSITE from '../constant';\r\n\r\nconst Blog = () => {\r\n  // State\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [filteredBlogs, setFilteredBlogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [category, setCategory] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [lastUpdated, setLastUpdated] = useState(new Date());\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const blogsPerPage = 9;\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'info'\r\n  });\r\n\r\n  // Categories based on the blog-fetcher.js file\r\n  const categories = [\r\n    { value: 'all', label: 'All Categories' },\r\n    { value: 'vlsi', label: 'VLSI' },\r\n    { value: 'electronics', label: 'Electronics' },\r\n    { value: 'diy-electronics', label: 'DIY Electronics' },\r\n    { value: 'electrical-engineering', label: 'Electrical Engineering' },\r\n    { value: 'electronics-design', label: 'Electronics Design' },\r\n    { value: 'fpga', label: 'FPGA' }\r\n  ];\r\n  \r\n  // Helper function to filter blogs by search term and category\r\n  const filterBlogs = useCallback((blogsToFilter, term, selectedCategory) => {\r\n    let filtered = [...blogsToFilter];\r\n    \r\n    // Filter by category if not 'all'\r\n    if (selectedCategory !== 'all') {\r\n      filtered = filtered.filter(blog => \r\n        blog.category.toLowerCase() === selectedCategory.toLowerCase()\r\n      );\r\n    }\r\n    \r\n    // Filter by search term if provided\r\n    if (term) {\r\n      const searchTermLower = term.toLowerCase();\r\n      filtered = filtered.filter(blog => \r\n        blog.title.toLowerCase().includes(searchTermLower) || \r\n        blog.description.toLowerCase().includes(searchTermLower) ||\r\n        blog.source.toLowerCase().includes(searchTermLower) ||\r\n        (blog.category && blog.category.toLowerCase().includes(searchTermLower))\r\n      );\r\n    }\r\n    \r\n    return filtered;\r\n  }, []);\r\n  \r\n  // Fetch blogs function\r\n  const fetchBlogs = useCallback(async() => {\r\n    if (refreshing) return; // Prevent multiple simultaneous requests\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.get(`${URLSITE}/api/general/blogs`);\r\n      console.log('Response:', response.data);\r\n      \r\n      // Set blogs from the API response\r\n      setBlogs(response.data);\r\n      \r\n      // Apply filters to the fetched blogs\r\n      const filtered = filterBlogs(response.data, searchTerm, category);\r\n      setFilteredBlogs(filtered);\r\n      \r\n      setLastUpdated(new Date());\r\n      setLoading(false);\r\n      \r\n      // Reset to page 1 when filter changes\r\n      setCurrentPage(1);\r\n    } catch (err) {\r\n      console.error('Error fetching blogs:', err);\r\n      setError('Failed to load blog posts. Please try again later.');\r\n      setLoading(false);\r\n    }\r\n  }, [category, searchTerm, filterBlogs, refreshing]);\r\n  \r\n  // Initial fetch only when component mounts\r\n  useEffect(() => {\r\n    fetchBlogs();\r\n  }, []);\r\n  \r\n  // Apply filters when search term or category changes without re-fetching\r\n  useEffect(() => {\r\n    if (blogs.length > 0) {\r\n      const filtered = filterBlogs(blogs, searchTerm, category);\r\n      setFilteredBlogs(filtered);\r\n      setCurrentPage(1); // Reset to first page when filters change\r\n    }\r\n  }, [blogs, searchTerm, category, filterBlogs]);\r\n  \r\n  // Handle manual refresh\r\n  const handleRefresh = () => {\r\n    if (refreshing || loading) return;\r\n    \r\n    setRefreshing(true);\r\n    \r\n    // Fetch new data\r\n    fetchBlogs()\r\n      .then(() => {\r\n        setRefreshing(false);\r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Blog feed updated successfully',\r\n          severity: 'success'\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setRefreshing(false);\r\n      });\r\n  };\r\n  \r\n  // Handle category change\r\n  const handleCategoryChange = (event) => {\r\n    const selectedCategory = event.target.value;\r\n    setCategory(selectedCategory);\r\n  };\r\n  \r\n  // Handle search\r\n  const handleSearch = (event) => {\r\n    const term = event.target.value;\r\n    setSearchTerm(term);\r\n  };\r\n  \r\n  // Share blog post\r\n  const shareBlogPost = (blog) => {\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        title: blog.title,\r\n        text: blog.description,\r\n        url: blog.link\r\n      })\r\n      .then(() => {\r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Shared successfully',\r\n          severity: 'success'\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error sharing:', error);\r\n      });\r\n    } else {\r\n      // Fallback - copy link to clipboard\r\n      navigator.clipboard.writeText(blog.link).then(\r\n        () => {\r\n          setSnackbar({\r\n            open: true,\r\n            message: 'Link copied to clipboard',\r\n            severity: 'success'\r\n          });\r\n        },\r\n        () => {\r\n          setSnackbar({\r\n            open: true,\r\n            message: 'Failed to copy link',\r\n            severity: 'error'\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n  \r\n  // Toggle bookmark functionality\r\n  const toggleBookmark = (blogId) => {\r\n    // Add your bookmark implementation here\r\n    setSnackbar({\r\n      open: true,\r\n      message: 'Bookmark feature coming soon!',\r\n      severity: 'info'\r\n    });\r\n  };\r\n  \r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Unknown date';\r\n    \r\n    try {\r\n      const date = new Date(dateString);\r\n      const now = new Date();\r\n      const diffMs = now - date;\r\n      const diffMins = Math.round(diffMs / 60000);\r\n      const diffHours = Math.round(diffMs / 3600000);\r\n      \r\n      if (diffMins < 60) {\r\n        return diffMins <= 1 ? 'Just now' : `${diffMins} mins ago`;\r\n      } else if (diffHours < 24) {\r\n        return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\r\n      } else {\r\n        return date.toLocaleDateString('en-US', { \r\n          year: 'numeric', \r\n          month: 'short', \r\n          day: 'numeric' \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Date formatting error:', error);\r\n      return 'Unknown date';\r\n    }\r\n  };\r\n  \r\n  // Format last updated time\r\n  const formatLastUpdated = () => {\r\n    return lastUpdated.toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n  \r\n  // Truncate text to specified length\r\n  const truncateText = (text, maxLength) => {\r\n    if (!text) return '';\r\n    if (text.length <= maxLength) return text;\r\n    return text.substring(0, maxLength) + '...';\r\n  };\r\n  \r\n  // Close snackbar\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') return;\r\n    setSnackbar({ ...snackbar, open: false });\r\n  };\r\n  \r\n  // Handle page change\r\n  const handlePageChange = (event, value) => {\r\n    setCurrentPage(value);\r\n    // Scroll to top of blog content\r\n    const blogContent = document.querySelector('.blog-content');\r\n    if (blogContent) {\r\n      blogContent.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n  \r\n  // Get current blogs for pagination\r\n  const indexOfLastBlog = currentPage * blogsPerPage;\r\n  const indexOfFirstBlog = indexOfLastBlog - blogsPerPage;\r\n  const currentBlogs = filteredBlogs.slice(indexOfFirstBlog, indexOfLastBlog);\r\n  const totalPages = Math.ceil(filteredBlogs.length / blogsPerPage);\r\n  \r\n  return (\r\n    <Box className=\"blog-page\">\r\n      {/* Blog Header Section - Enhanced */}\r\n      <Box className=\"blog-header\">\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ position: 'relative', zIndex: 2, py: 4 }}>\r\n            {/* Decorative elements */}\r\n            <Box sx={{ \r\n              position: 'absolute', \r\n              top: -15, \r\n              right: { xs: -15, md: 20 }, \r\n              opacity: 0.15, \r\n              transform: 'rotate(15deg)',\r\n              display: { xs: 'none', md: 'block' }\r\n            }}>\r\n              <Memory sx={{ fontSize: 120, color: 'white' }} />\r\n            </Box>\r\n            <Box sx={{ \r\n              position: 'absolute', \r\n              bottom: -30, \r\n              left: { xs: -15, md: 50 }, \r\n              opacity: 0.15,\r\n              transform: 'rotate(-10deg)',\r\n              display: { xs: 'none', md: 'block' }\r\n            }}>\r\n              <Code sx={{ fontSize: 100, color: 'white' }} />\r\n            </Box>\r\n\r\n            {/* Main heading with animation */}\r\n            <Fade in={true} timeout={1000}>\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography \r\n                  variant=\"overline\" \r\n                  sx={{ \r\n                    color: 'rgba(255,255,255,0.9)', \r\n                    letterSpacing: 3, \r\n                    fontWeight: 500,\r\n                    fontSize: '0.95rem',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: 1,\r\n                    mb: 1\r\n                  }}\r\n                >\r\n                  <ElectricBolt fontSize=\"small\" /> LATEST TECH INSIGHTS\r\n                </Typography>\r\n                <Typography \r\n                  variant=\"h2\" \r\n                  component=\"h1\" \r\n                  sx={{ \r\n                    fontWeight: 800, \r\n                    letterSpacing: -0.5,\r\n                    fontSize: { xs: '2.5rem', md: '3.5rem' },\r\n                    lineHeight: 1.1,\r\n                    background: 'linear-gradient(90deg, #ffffff 0%, #e1bee7 100%)',\r\n                    backgroundClip: 'text',\r\n                    WebkitBackgroundClip: 'text',\r\n                    WebkitTextFillColor: 'transparent',\r\n                    mb: 3\r\n                  }}\r\n                >\r\n                  Engineering <br />\r\n                  Knowledge Hub\r\n                </Typography>\r\n              </Box>\r\n            </Fade>\r\n\r\n            {/* Subheading with animation */}\r\n            <Fade in={true} timeout={1500} style={{ transitionDelay: '300ms' }}>\r\n              <Box>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  sx={{ \r\n                    maxWidth: '700px',\r\n                    fontWeight: 400,\r\n                    fontSize: { xs: '1rem', md: '1.25rem' },\r\n                    lineHeight: 1.5,\r\n                    color: 'rgba(255,255,255,0.85)'\r\n                  }}\r\n                >\r\n                  Explore curated insights from the world of VLSI design, FPGAs, and electronic systems. \r\n                  Stay at the forefront of technological innovation with our expert-driven content.\r\n                </Typography>\r\n\r\n                {/* Quick stats */}\r\n                <Stack \r\n                  direction=\"row\" \r\n                  spacing={3} \r\n                  sx={{ \r\n                    mt: 4, \r\n                    display: { xs: 'none', sm: 'flex' },\r\n                    color: 'rgba(255,255,255,0.8)'\r\n                  }}\r\n                  divider={<Divider orientation=\"vertical\" flexItem sx={{ backgroundColor: 'rgba(255,255,255,0.2)' }} />}\r\n                >\r\n                  <Box>\r\n                    <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ color: '#e1bee7' }}>\r\n                      {blogs.length}+\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Articles</Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ color: '#e1bee7' }}>\r\n                      {categories.length - 1}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Categories</Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ color: '#e1bee7' }}>\r\n                      Weekly\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Updates</Typography>\r\n                  </Box>\r\n                </Stack>\r\n              </Box>\r\n            </Fade>\r\n          </Box>\r\n\r\n          {/* Updated Blog Controls */}\r\n          <Zoom in={true} style={{ transitionDelay: '600ms' }}>\r\n            <Paper \r\n              elevation={3} \r\n              sx={{ \r\n                p: 3, \r\n                mt: 5, \r\n                borderRadius: 3,\r\n                backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n                backdropFilter: 'blur(10px)',\r\n                transition: 'all 0.3s ease',\r\n                transform: 'translateY(20px)'\r\n              }}\r\n            >\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Search for articles, topics, or keywords...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <Search color=\"primary\" />\r\n                        </InputAdornment>\r\n                      ),\r\n                      sx: { \r\n                        borderRadius: 2,\r\n                        backgroundColor: '#f5f5f5',\r\n                        '&:hover': {\r\n                          backgroundColor: '#ffffff',\r\n                          boxShadow: '0 0 0 2px #e1bee7'\r\n                        },\r\n                        '& .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: 'transparent'\r\n                        },\r\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: '#9c27b0'\r\n                        },\r\n                        transition: 'all 0.3s ease'\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Box sx={{ \r\n                    display: 'flex', \r\n                    flexDirection: { xs: 'column', sm: 'row' },\r\n                    alignItems: { xs: 'stretch', sm: 'center' },\r\n                    justifyContent: 'space-between',\r\n                    gap: 2\r\n                  }}>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center',\r\n                      gap: 1\r\n                    }}>\r\n                      <FilterAlt color=\"primary\" fontSize=\"small\" />\r\n                      <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                        Filter by category:\r\n                      </Typography>\r\n                    </Box>\r\n                    <ToggleButtonGroup\r\n                      value={category}\r\n                      exclusive\r\n                      onChange={(e, newCategory) => {\r\n                        if (newCategory !== null) {\r\n                          handleCategoryChange({ target: { value: newCategory } });\r\n                        }\r\n                      }}\r\n                      aria-label=\"category filter\"\r\n                      sx={{ \r\n                        flexWrap: 'wrap',\r\n                        justifyContent: 'center',\r\n                        '& .MuiToggleButtonGroup-grouped': {\r\n                          m: 0.5,\r\n                          borderRadius: '16px !important',\r\n                          border: '1px solid #e0e0e0 !important',\r\n                          '&.Mui-selected': {\r\n                            backgroundColor: '#9c27b0',\r\n                            color: 'white',\r\n                            '&:hover': {\r\n                              backgroundColor: '#7b1fa2',\r\n                            }\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      {categories.map((option) => (\r\n                        <ToggleButton \r\n                          key={option.value} \r\n                          value={option.value}\r\n                          sx={{ \r\n                            px: 2, \r\n                            py: 0.5, \r\n                            textTransform: 'none',\r\n                            fontSize: '0.875rem',\r\n                            transition: 'all 0.2s ease',\r\n                            backgroundColor: 'white'\r\n                          }}\r\n                        >\r\n                          {option.label}\r\n                        </ToggleButton>\r\n                      ))}\r\n                    </ToggleButtonGroup>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Zoom>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Blog Content Section */}\r\n      <Box className=\"blog-content\" sx={{ py: 6, bgcolor: '#f5f5f5' }}>\r\n        <Container maxWidth=\"lg\">\r\n          {/* Last updated info and refresh button */}\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Last updated: {formatLastUpdated()} • {filteredBlogs.length} articles\r\n            </Typography>\r\n            <Tooltip title=\"Refresh content\">\r\n              <IconButton \r\n                onClick={handleRefresh} \r\n                disabled={loading || refreshing}\r\n                color=\"primary\"\r\n              >\r\n                <Refresh />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n          \r\n          {/* Loading Indicator */}\r\n          {loading ? (\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', py: 8 }}>\r\n              <CircularProgress color=\"primary\" size={60} thickness={4} />\r\n              <Typography variant=\"body1\" sx={{ mt: 2 }}>\r\n                Fetching the latest articles...\r\n              </Typography>\r\n            </Box>\r\n          ) : error ? (\r\n            <Box className=\"error-message\" sx={{ p: 3, bgcolor: '#fee', borderRadius: 2 }}>\r\n              <Typography color=\"error\">{error}</Typography>\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                sx={{ mt: 2 }}\r\n                onClick={handleRefresh}\r\n              >\r\n                Try Again\r\n              </Button>\r\n            </Box>\r\n          ) : filteredBlogs.length === 0 ? (\r\n            <Box className=\"no-results\" sx={{ textAlign: 'center', py: 8 }}>\r\n              <Typography variant=\"h6\">No blogs found matching your criteria</Typography>\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                sx={{ mt: 2 }}\r\n                onClick={() => {\r\n                  setSearchTerm('');\r\n                  setCategory('all');\r\n                }}\r\n              >\r\n                Clear Filters\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <Grid container spacing={3} className=\"blog-grid\">\r\n                {currentBlogs.map((blog) => (\r\n                  <Grid item xs={12} sm={6} md={4} key={blog.id}>\r\n                    <Card className=\"blog-card\" elevation={2} sx={{ height: '100%', display: 'flex', flexDirection: 'column', position: 'relative' }}>\r\n                      {blog.isNew && (\r\n                        <Chip \r\n                          icon={<FiberNew />}\r\n                          label=\"New\" \r\n                          color=\"secondary\"\r\n                          size=\"small\"\r\n                          sx={{ \r\n                            position: 'absolute',\r\n                            top: 10,\r\n                            right: 10,\r\n                            zIndex: 2,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        />\r\n                      )}\r\n\r\n                      {blog.image && (\r\n                        <CardMedia\r\n                          component=\"img\"\r\n              \r\n                          style={{\r\n                            height:\"233px\",\r\n                            width:\"374px\"\r\n                          }}\r\n                          image={blog.image}\r\n                          alt={blog.title}\r\n                          onError={(e) => {\r\n                            // If image fails to load, replace with default\r\n                            e.target.onerror = null; // Prevent infinite loop\r\n                            e.target.src = '/logo192.png'; // Fallback to React logo which should always be present\r\n                          }}\r\n                          sx={{\r\n                            objectFit: 'cover',\r\n                            background: 'linear-gradient(to right, #f5f5f5, #e0e0e0)'\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n                        <Chip \r\n                          label={blog.category || 'Uncategorized'} \r\n                          size=\"small\" \r\n                          sx={{ \r\n                            alignSelf: 'flex-start', \r\n                            mb: 1.5,\r\n                            bgcolor: '#e1bee7',\r\n                            color: '#6a1b9a',\r\n                            fontWeight: 500\r\n                          }} \r\n                        />\r\n                        <Typography variant=\"h6\" component=\"h2\" gutterBottom sx={{ fontWeight: 500 }}>\r\n                          <a \r\n                            href={blog.link} \r\n                            target=\"_blank\" \r\n                            rel=\"noopener noreferrer\"\r\n                            style={{ color: 'inherit', textDecoration: 'none' }}\r\n                          >\r\n                            {blog.title}\r\n                          </a>\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {truncateText(blog.description, 120)}\r\n                            \r\n                          </Typography>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {formatDate(blog.pubDate)}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\" paragraph sx={{ mb: 2 }}>\r\n                        {blog.source}\r\n                        </Typography>\r\n                        <Box sx={{ mt: 'auto', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                          <Button \r\n                            variant=\"text\" \r\n                            color=\"primary\" \r\n                            href={blog.link} \r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            endIcon={<ArrowForward />}\r\n                            size=\"small\"\r\n                          >\r\n                            Read More\r\n                          </Button>\r\n                          <Box>\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => toggleBookmark(blog.id)}\r\n                              color=\"primary\"\r\n                            >\r\n                              <BookmarkBorder />\r\n                            </IconButton>\r\n                            <IconButton \r\n                              size=\"small\"\r\n                              onClick={() => shareBlogPost(blog)}\r\n                              color=\"primary\"\r\n                            >\r\n                              <Share />\r\n                            </IconButton>\r\n                          </Box>\r\n                        </Box>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n              \r\n              {/* Pagination */}\r\n              {totalPages > 1 && (\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\r\n                  <Pagination \r\n                    count={totalPages} \r\n                    page={currentPage} \r\n                    onChange={handlePageChange} \r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    showFirstButton\r\n                    showLastButton\r\n                    sx={{\r\n                      '& .MuiPaginationItem-root': {\r\n                        fontSize: '1rem',\r\n                      },\r\n                      '& .Mui-selected': {\r\n                        backgroundColor: 'rgba(156, 39, 176, 0.15) !important',\r\n                        fontWeight: 'bold',\r\n                      }\r\n                    }}\r\n                  />\r\n                </Box>\r\n              )}\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Newsletter Section */}\r\n      <Box className=\"newsletter\" sx={{ bgcolor: '#9c27b0', color: 'white', py: 6 }}>\r\n        <Container maxWidth=\"md\" sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h4\" component=\"h2\" gutterBottom>\r\n            Never Miss an Update\r\n          </Typography>\r\n          <Typography variant=\"body1\" paragraph sx={{ mb: 4, maxWidth: '600px', mx: 'auto' }}>\r\n            Subscribe to our newsletter for weekly curated content on VLSI, digital design, and more.\r\n          </Typography>\r\n          <Box \r\n            component=\"form\" \r\n            sx={{ \r\n              display: 'flex', \r\n              maxWidth: '500px', \r\n              mx: 'auto',\r\n              flexDirection: { xs: 'column', sm: 'row' },\r\n              gap: { xs: 2, sm: 0 }\r\n            }}\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              // Handle newsletter subscription\r\n              setSnackbar({\r\n                open: true,\r\n                message: 'Newsletter subscription successful!',\r\n                severity: 'success'\r\n              });\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Your email address\"\r\n              type=\"email\"\r\n              required\r\n              InputProps={{\r\n                sx: { \r\n                  bgcolor: 'white', \r\n                  borderRadius: { xs: 1, sm: '4px 0 0 4px' },\r\n                  '& fieldset': {\r\n                    borderColor: 'white',\r\n                    borderRight: { sm: 'none' }\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Button \r\n              type=\"submit\" \r\n              variant=\"contained\" \r\n              sx={{ \r\n                bgcolor: '#6a1b9a', \r\n                borderRadius: { xs: 1, sm: '0 4px 4px 0' },\r\n                '&:hover': { bgcolor: '#4a148c' },\r\n                px: 3\r\n              }}\r\n            >\r\n              Subscribe\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n      \r\n      {/* Snackbar for notifications */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={4000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert \r\n          onClose={handleCloseSnackbar} \r\n          severity={snackbar.severity} \r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Blog;"],"names":["Blog","blogs","setBlogs","useState","filteredBlogs","setFilteredBlogs","loading","setLoading","refreshing","setRefreshing","error","setError","category","setCategory","searchTerm","setSearchTerm","lastUpdated","setLastUpdated","Date","currentPage","setCurrentPage","snackbar","setSnackbar","open","message","severity","categories","value","label","filterBlogs","useCallback","blogsToFilter","term","selectedCategory","filtered","filter","blog","toLowerCase","searchTermLower","title","includes","description","source","fetchBlogs","async","response","axios","get","URLSITE","console","log","data","err","useEffect","length","handleRefresh","then","catch","formatDate","dateString","date","diffMs","diffMins","Math","round","diffHours","toLocaleDateString","year","month","day","handleCloseSnackbar","event","reason","indexOfLastBlog","indexOfFirstBlog","currentBlogs","slice","totalPages","ceil","_jsxs","Box","className","children","_jsx","Container","maxWidth","sx","position","zIndex","py","top","right","xs","md","opacity","transform","display","Memory","fontSize","color","bottom","left","Code","Fade","in","timeout","mb","Typography","variant","letterSpacing","fontWeight","alignItems","gap","ElectricBolt","component","lineHeight","background","backgroundClip","WebkitBackgroundClip","WebkitTextFillColor","style","transitionDelay","Stack","direction","spacing","mt","sm","divider","Divider","orientation","flexItem","backgroundColor","Zoom","Paper","elevation","p","borderRadius","backdropFilter","transition","Grid","container","item","TextField","fullWidth","placeholder","onChange","target","InputProps","startAdornment","InputAdornment","Search","boxShadow","borderColor","flexDirection","justifyContent","FilterAlt","ToggleButtonGroup","exclusive","e","newCategory","handleCategoryChange","flexWrap","m","border","map","option","ToggleButton","px","textTransform","bgcolor","toLocaleTimeString","hour","minute","Tooltip","IconButton","onClick","disabled","Refresh","CircularProgress","size","thickness","Button","textAlign","_Fragment","Card","height","isNew","Chip","icon","FiberNew","image","CardMedia","width","alt","onError","onerror","src","objectFit","CardContent","flexGrow","alignSelf","gutterBottom","href","link","rel","textDecoration","text","maxLength","substring","pubDate","paragraph","endIcon","ArrowForward","id","BookmarkBorder","navigator","share","url","clipboard","writeText","shareBlogPost","Share","truncateText","Pagination","count","page","handlePageChange","blogContent","document","querySelector","scrollIntoView","behavior","showFirstButton","showLastButton","mx","onSubmit","preventDefault","type","required","borderRight","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert"],"sourceRoot":""}