{"version":3,"file":"static/js/6630.0687c8c1.chunk.js","mappings":"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","sources":["pages/Ckeditor2.jsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport URLSITE from \"../constant\";\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/googlecode.css';\nimport RichTextEditor from \"./CustomEditor\";\n// Import Verilog highlighting - make sure you have this installed\nimport 'highlight.js/lib/languages/verilog';\nimport AuthContext from '../context/AuthContext';\n\n// Register Verilog language with highlight.js\nhljs.registerLanguage('verilog', require('highlight.js/lib/languages/verilog'));\n\nconst CourseContentTab = () => {\n  const navigate = useNavigate()\n  const context = useContext(AuthContext);\n\n  useEffect(()=>{\n    if(!context.user) return;\n    if(context.user.email!=\"verigeektech@gmail.com\"){\n      navigate('/')\n    }\n  },[context.user])\n\n  const [modules, setModules] = useState([]);\n  const navigator = useNavigate();\n  const [selectedModuleId, setSelectedModuleId] = useState('');\n  const [editorContent,setEditorContent] = useState('')\n  const [chapter, setChapter] = useState({\n    id: uuidv4(),\n    title: '',\n    description: '',\n    estimatedTime: '',\n    completed: false,\n    sections: [\n      {\n        id: uuidv4(),\n        title: '',\n        content: '',\n        contentBlocks: [] // Will store additional CKEditor content blocks and code blocks\n      },\n    ],\n    codeExamples: [\n      {\n        id: uuidv4(),\n        title: '',\n        description: '',\n        code: '',\n        explanation: '',\n      },\n    ],\n  });\n\n  useEffect(() => {\n    axios\n        .post(`${URLSITE}/api/modules/get-modules`)\n        .then((res) => {\n          if (res.data.success) {\n            setModules(res.data.modules);\n          }\n        })\n        .catch((err) => {\n          console.error('Failed to fetch modules:', err);\n        });\n  }, []);\n\n  // For syntax highlighting in preview\n  useEffect(() => {\n    document.querySelectorAll('pre code').forEach((block) => {\n      hljs.highlightBlock(block);\n    });\n  });\n\n  const handleSectionChange = (index, field, value) => {\n    const updatedSections = [...chapter.sections];\n    updatedSections[index][field] = value;\n    setChapter({ ...chapter, sections: updatedSections });\n  };\n\n  const handleEditorChange = (index, event, editor) => {\n    const data = editor.getData();\n    handleSectionChange(index, 'content', data);\n  };\n\n  const addSection = () => {\n    setChapter({\n      ...chapter,\n      sections: [\n        ...chapter.sections,\n        {\n          id: uuidv4(),\n          title: '',\n          content: '',\n          contentBlocks: []\n        },\n      ],\n    });\n  };\n\n  const deleteSection = (index) => {\n    const updatedSections = chapter.sections.filter((_, i) => i !== index);\n    setChapter({ ...chapter, sections: updatedSections });\n  };\n\n  // Add more content (CKEditor) block to a section\n  const addMoreContent = (sectionIndex) => {\n    const updatedSections = [...chapter.sections];\n    if (!updatedSections[sectionIndex].contentBlocks) {\n      updatedSections[sectionIndex].contentBlocks = [];\n    }\n\n    updatedSections[sectionIndex].contentBlocks.push({\n      id: uuidv4(),\n      type: 'content',\n      content: ''\n    });\n\n    setChapter({ ...chapter, sections: updatedSections });\n  };\n\n  // Add code block to a section\n  const addCodeBlock = (sectionIndex) => {\n    const updatedSections = [...chapter.sections];\n    if (!updatedSections[sectionIndex].contentBlocks) {\n      updatedSections[sectionIndex].contentBlocks = [];\n    }\n\n    updatedSections[sectionIndex].contentBlocks.push({\n      id: uuidv4(),\n      type: 'code',\n      language: 'javascript', // Default language\n      code: ''\n    });\n\n    setChapter({ ...chapter, sections: updatedSections });\n  };\n\n  // Handle changes in CKEditor content blocks\n  const handleContentBlockEditorChange = (sectionIndex, blockIndex, event, editor) => {\n    const data = editor.getData();\n    const updatedSections = [...chapter.sections];\n    updatedSections[sectionIndex].contentBlocks[blockIndex].content = data;\n    setChapter({ ...chapter, sections: updatedSections });\n  };\n\n  // Handle changes in code blocks\n  const handleCodeBlockChange = (sectionIndex, blockIndex, value) => {\n    const updatedSections = [...chapter.sections];\n    updatedSections[sectionIndex].contentBlocks[blockIndex].code = value;\n    setChapter({ ...chapter, sections: updatedSections });\n  };\n\n  // Delete a content block (either CKEditor or code)\n  const deleteContentBlock = (sectionIndex, blockIndex) => {\n    const updatedSections = [...chapter.sections];\n    updatedSections[sectionIndex].contentBlocks.splice(blockIndex, 1);\n    setChapter({ ...chapter, sections: updatedSections });\n  };\n\n  // Handle changing the language of a code block\n  const handleLanguageChange = (sectionIndex, blockIndex, language) => {\n    const updatedSections = [...chapter.sections];\n    updatedSections[sectionIndex].contentBlocks[blockIndex].language = language;\n    setChapter({ ...chapter, sections: updatedSections });\n  };\n\n  const handleCodeExampleChange = (codeIndex, field, value) => {\n    const updatedExamples = [...chapter.codeExamples];\n    updatedExamples[codeIndex][field] = value;\n    setChapter({ ...chapter, codeExamples: updatedExamples });\n  };\n\n  const addCodeExample = () => {\n    const updatedExamples = [\n      ...chapter.codeExamples,\n      {\n        id: uuidv4(),\n        title: '',\n        description: '',\n        code: '',\n        explanation: '',\n      },\n    ];\n    setChapter({ ...chapter, codeExamples: updatedExamples });\n  };\n\n  const deleteCodeExample = (codeIndex) => {\n    const updatedExamples = chapter.codeExamples.filter((_, i) => i !== codeIndex);\n    setChapter({ ...chapter, codeExamples: updatedExamples });\n  };\n\n  const handleUpload = async () => {\n    if (!selectedModuleId) return alert('Please select a module first!');\n\n    // Create a deep copy of the chapter to avoid modifying the state directly\n    const chapterToUpload = JSON.parse(JSON.stringify(chapter));\n\n    // Process each section to combine main content with additional content blocks\n    chapterToUpload.sections = chapterToUpload.sections.map(section => {\n      let combinedContent = section.content || '';\n\n      // Process content blocks and code blocks\n      if (section.contentBlocks && section.contentBlocks.length > 0) {\n        section.contentBlocks.forEach(block => {\n          if (block.type === 'content') {\n            // Append content blocks to the main content\n            combinedContent += block.content || '';\n          } else if (block.type === 'code') {\n            // Format code blocks as HTML and append to content\n            combinedContent += `\n              <pre><code class=\"language-${block.language}\">\n  ${block.code}\n              </code></pre>\n            `;\n          }\n        });\n      }\n\n      // Return a simplified section object that matches the MongoDB schema\n      return {\n        id: section.id,\n        title: section.title,\n        content: combinedContent\n      };\n    });\n\n    const payload = {\n      moduleId: selectedModuleId,\n      id: chapterToUpload.id,\n      title: chapterToUpload.title,\n      description: chapterToUpload.description,\n      estimatedTime: chapterToUpload.estimatedTime,\n      completed: chapterToUpload.completed,\n      editorContent:editorContent,\n      isNewEditorUsed:true\n    };\n    console.log(payload)\n\n    try {\n      console.log('Sending payload:', payload);\n      const response = await axios.post(`${URLSITE}/api/modules/upload-chapter`, payload, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      alert(\"Chapter uploaded successfully\");\n      navigator('/ckeditor');\n    } catch (error) {\n      console.log(error);\n      if (error?.response?.data?.error?.message) {\n        alert(error.response.data.error.message);\n      } else {\n        alert(error);\n      }\n    }\n  };\n\n  // Custom CKEditor plugin for better code block handling\n  const editorConfig = {\n    toolbar: [\n      'heading', '|',\n      'fontFamily', 'fontSize', '|',\n      'bold', 'italic', 'underline', 'strikethrough', '|',\n      'link', 'bulletedList', 'numberedList', '|',\n      'blockQuote', 'insertTable', 'codeBlock', '|',\n      'undo', 'redo'\n    ],\n    codeBlock: {\n      languages: [\n        { language: 'plaintext', label: 'Plain text' },\n        { language: 'javascript', label: 'JavaScript' },\n        { language: 'python', label: 'Python' },\n        { language: 'verilog', label: 'Verilog' }, // Add Verilog as an option\n        { language: 'html', label: 'HTML' },\n        { language: 'css', label: 'CSS' },\n      ],\n    },\n    image: {\n      insert: { integrations: ['insertImageViaUrl'] },\n      toolbar: ['imageTextAlternative', 'imageStyle:full', 'imageStyle:side'],\n    },\n    removePlugins: ['ImageUpload', 'EasyImage'],\n  };\n\n  // Generate combined preview HTML with syntax highlighting for code\n  const generatePreviewHtml = (section) => {\n    let previewHtml = section.content || '';\n\n    if (section.contentBlocks && section.contentBlocks.length > 0) {\n      section.contentBlocks.forEach(block => {\n        if (block.type === 'content') {\n          previewHtml += block.content || '';\n        } else if (block.type === 'code') {\n          previewHtml += `\n            <pre><code class=\"language-${block.language}\">\n${block.code}\n            </code></pre>\n          `;\n        }\n      });\n    }\n\n    return previewHtml;\n  };\n\n\n  return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 px-4 py-6\">\n        <div className=\"max-w-full mx-auto\">\n          {/* Header */}\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold text-gray-800 mb-2\">Course Content Manager</h1>\n            <p className=\"text-gray-600 text-lg\">Create and manage your course chapters with ease</p>\n            <div className=\"w-24 h-1 bg-gradient-to-r from-blue-500 to-purple-600 mx-auto mt-4 rounded-full\"></div>\n          </div>\n\n          {/* Module Selection */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6 mb-8 border border-gray-100\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded-full mr-3\"></div>\n              <h2 className=\"text-xl font-semibold text-gray-800\">Select Module</h2>\n            </div>\n            <select\n                value={selectedModuleId}\n                onChange={(e) => setSelectedModuleId(e.target.value)}\n                className=\"w-full p-4 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 hover:bg-white\"\n            >\n              <option value=\"\">-- Choose a Module --</option>\n              {modules.map((mod) => (\n                  <option key={mod.id} value={mod.id}>\n                    {mod.title} – {mod.description.split(' ').slice(0, 20).join(' ')}\n                    {mod.description.split(' ').length > 20 ? '...' : ''}\n                  </option>\n              ))}\n            </select>\n          </div>\n\n          {selectedModuleId && (\n              <div className=\"grid grid-cols-5 gap-6\">\n                {/* Left Column - Form Fields - 20% */}\n                <div className=\"col-span-1 space-y-6\">\n                  {/* Chapter Details Card */}\n                  <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\n                    <div className=\"flex items-center mb-6\">\n                      <div className=\"w-3 h-3 bg-green-500 rounded-full mr-3\"></div>\n                      <h2 className=\"text-xl font-semibold text-gray-800\">Chapter Details</h2>\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Chapter Title\n                        </label>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter chapter title...\"\n                            value={chapter.title}\n                            onChange={(e) => setChapter({ ...chapter, title: e.target.value })}\n                            className=\"w-full p-4 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 bg-gray-50 hover:bg-white\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Chapter Description\n                        </label>\n                        <textarea\n                            placeholder=\"Describe what students will learn in this chapter...\"\n                            value={chapter.description}\n                            onChange={(e) => setChapter({ ...chapter, description: e.target.value })}\n                            rows={4}\n                            className=\"w-full p-4 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 bg-gray-50 hover:bg-white resize-none\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Estimated Time\n                        </label>\n                        <input\n                            type=\"text\"\n                            placeholder=\"e.g., 1 hour 30 minutes\"\n                            value={chapter.estimatedTime}\n                            onChange={(e) => setChapter({ ...chapter, estimatedTime: e.target.value })}\n                            className=\"w-full p-4 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 bg-gray-50 hover:bg-white\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Action Buttons Card */}\n                  <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\n                    <div className=\"flex items-center mb-6\">\n                      <div className=\"w-3 h-3 bg-purple-500 rounded-full mr-3\"></div>\n                      <h2 className=\"text-xl font-semibold text-gray-800\">Actions</h2>\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <button\n                          onClick={handleUpload}\n                          disabled={!chapter.title || !chapter.description}\n                          className=\"w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-4 px-6 rounded-lg font-semibold text-lg hover:from-blue-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\"\n                      >\n                        <div className=\"flex items-center justify-center\">\n                          <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                          </svg>\n                          Upload Chapter as JSON\n                        </div>\n                      </button>\n\n                      <div className=\"text-sm text-gray-500 text-center\">\n                        Make sure to fill in all required fields before uploading\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Status Card */}\n                  <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-6 border border-blue-200\">\n                    <div className=\"flex items-center mb-3\">\n                      <div className=\"w-3 h-3 bg-blue-500 rounded-full mr-3\"></div>\n                      <h3 className=\"text-lg font-semibold text-gray-800\">Chapter Status</h3>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      <div className=\"bg-white p-3 rounded-lg\">\n                        <span className=\"text-gray-600\">Title:</span>\n                        <div className=\"font-medium text-gray-800 truncate\">\n                          {chapter.title || 'Not set'}\n                        </div>\n                      </div>\n                      <div className=\"bg-white p-3 rounded-lg\">\n                        <span className=\"text-gray-600\">Time:</span>\n                        <div className=\"font-medium text-gray-800\">\n                          {chapter.estimatedTime || 'Not set'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Right Column - Rich Text Editor - 80% */}\n                <div className=\"col-span-4\">\n                  <div className=\"bg-white rounded-xl shadow-lg border border-gray-100 overflow-hidden h-[calc(100vh-200px)]\">\n                    <div className=\"bg-gradient-to-r from-purple-600 to-blue-600 p-4\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-3 h-3 bg-white rounded-full mr-3\"></div>\n                        <h2 className=\"text-xl font-semibold text-white\">Content Editor</h2>\n                      </div>\n                      <p className=\"text-purple-100 text-sm mt-1\">Create rich content for your chapter</p>\n                    </div>\n\n                    <div className=\"p-6 h-full overflow-y-auto\">\n                      <RichTextEditor setEditorContent={setEditorContent}/>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          )}\n\n          {!selectedModuleId && (\n              <div className=\"text-center py-16\">\n                <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-700 mb-2\">Select a Module to Get Started</h3>\n                <p className=\"text-gray-500\">Choose a module from the dropdown above to begin creating your chapter content.</p>\n              </div>\n          )}\n        </div>\n      </div>\n  );\n};\n\nexport default CourseContentTab;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["hljs","registerLanguage","require","CourseContentTab","navigate","useNavigate","context","useContext","AuthContext","useEffect","user","email","modules","setModules","useState","navigator","selectedModuleId","setSelectedModuleId","editorContent","setEditorContent","chapter","setChapter","id","uuidv4","title","description","estimatedTime","completed","sections","content","contentBlocks","codeExamples","code","explanation","axios","post","URLSITE","then","res","data","success","catch","err","console","error","document","querySelectorAll","forEach","block","highlightBlock","_jsx","className","children","_jsxs","value","onChange","e","target","map","mod","split","slice","join","length","type","placeholder","rows","onClick","async","alert","chapterToUpload","JSON","parse","stringify","section","combinedContent","language","payload","moduleId","isNewEditorUsed","log","headers","_error$response","_error$response$data","_error$response$data$","response","message","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","RichTextEditor","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","test","byteToHex","i","push","toString","substr","arr","offset","arguments","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random"],"sourceRoot":""}