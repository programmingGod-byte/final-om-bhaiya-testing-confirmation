{"version":3,"file":"static/js/457.5544af27.chunk.js","mappings":"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","sources":["pages/CodeEditor.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, TextField, Button } from '@mui/material';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst VerilogModuleEditor = () => {\n  const [moduleInfo, setModuleInfo] = useState({\n    id: '', title: '', description: '', image: '', level: '', duration: '', rating: '', studentsCount: '',\n    completed: '', totalChapters: '', progress: '', updatedAt: '', lessons: '', exercises: '', students: '',\n    topics: ['']\n  });\n\n  const [codeExamples, setCodeExamples] = useState([{ title: '', difficulty: '', designCode: '', testbenchCode: '' }]);\n  const [chapters, setChapters] = useState([{\n    id: 1,\n    title: '',\n    description: '',\n    estimatedTime: '',\n    completed: false,\n    sections: [\n      { id: '1.1', title: '', content: '' }\n    ]\n  }]);\n\n  const handleModuleChange = (e) => {\n    setModuleInfo({ ...moduleInfo, [e.target.name]: e.target.value });\n  };\n\n  const handleSectionChange = (chapterIndex, sectionIndex, field, value) => {\n    const updated = [...chapters];\n    updated[chapterIndex].sections[sectionIndex][field] = value;\n    setChapters(updated);\n  };\n\n  const handleEditorChange = (chapterIndex, sectionIndex, event, editor) => {\n    const data = editor.getData();\n    handleSectionChange(chapterIndex, sectionIndex, 'content', data);\n  };\n\n  const addChapter = () => {\n    const newId = chapters.length + 1;\n    setChapters([...chapters, {\n      id: newId,\n      title: '',\n      description: '',\n      estimatedTime: '',\n      completed: false,\n      sections: [\n        { id: `${newId}.1`, title: '', content: '' }\n      ]\n    }]);\n  };\n\n  const addSection = (chapterIndex) => {\n    const updated = [...chapters];\n    const chapter = updated[chapterIndex];\n    const newSectionId = `${chapter.id}.${chapter.sections.length + 1}`;\n    chapter.sections.push({ id: newSectionId, title: '', content: '' });\n    setChapters(updated);\n  };\n\n  const addCodeExample = () => {\n    setCodeExamples([...codeExamples, { title: '', difficulty: '', designCode: '', testbenchCode: '' }]);\n  };\n\n  return (\n    <Box sx={{ maxWidth: '1000px', mx: 'auto', p: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>Module Information</Typography>\n      <TextField fullWidth label=\"Title\" name=\"title\" value={moduleInfo.title} onChange={handleModuleChange} sx={{ mb: 2 }} />\n      <TextField fullWidth label=\"Description\" name=\"description\" value={moduleInfo.description} onChange={handleModuleChange} multiline rows={2} sx={{ mb: 2 }} />\n      <TextField fullWidth label=\"Level\" name=\"level\" value={moduleInfo.level} onChange={handleModuleChange} sx={{ mb: 4 }} />\n\n      <Typography variant=\"h5\" gutterBottom>Chapters</Typography>\n      {chapters.map((chapter, cIndex) => (\n        <Box key={chapter.id} border={1} borderRadius={2} p={3} mb={3}>\n          <TextField\n            fullWidth\n            label=\"Chapter Title\"\n            value={chapter.title}\n            onChange={(e) => {\n              const updated = [...chapters];\n              updated[cIndex].title = e.target.value;\n              setChapters(updated);\n            }}\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            fullWidth\n            label=\"Chapter Description\"\n            value={chapter.description}\n            onChange={(e) => {\n              const updated = [...chapters];\n              updated[cIndex].description = e.target.value;\n              setChapters(updated);\n            }}\n            multiline\n            rows={2}\n            sx={{ mb: 2 }}\n          />\n          {chapter.sections.map((section, sIndex) => (\n            <Box key={section.id} border={1} borderColor=\"grey.300\" borderRadius={2} p={2} mb={2}>\n              <Typography fontWeight={600}>Section {section.id}</Typography>\n              <TextField\n                fullWidth\n                label=\"Section Title\"\n                value={section.title}\n                onChange={(e) => handleSectionChange(cIndex, sIndex, 'title', e.target.value)}\n                sx={{ mb: 2 }}\n              />\n              <CKEditor\n                editor={ClassicEditor}\n                data={section.content || ''}\n                onChange={(event, editor) => handleEditorChange(cIndex, sIndex, event, editor)}\n              />\n              {section.content && (\n                <Box mt={2}>\n                  <Typography fontWeight={500}>Preview:</Typography>\n                  <Box\n                    mt={1}\n                    p={2}\n                    border={1}\n                    borderRadius={2}\n                    bgcolor=\"#f9f9f9\"\n                    dangerouslySetInnerHTML={{ __html: section.content }}\n                  />\n                </Box>\n              )}\n            </Box>\n          ))}\n          <Button onClick={() => addSection(cIndex)}>+ Add Section</Button>\n        </Box>\n      ))}\n      <Button variant=\"contained\" onClick={addChapter}>+ Add Chapter</Button>\n\n      <Typography variant=\"h5\" gutterBottom mt={6}>Code Examples</Typography>\n      {codeExamples.map((example, index) => (\n        <Box key={index} border={1} borderRadius={2} p={3} mb={3}>\n          <TextField\n            fullWidth\n            label=\"Title\"\n            value={example.title}\n            onChange={(e) => {\n              const updated = [...codeExamples];\n              updated[index].title = e.target.value;\n              setCodeExamples(updated);\n            }}\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            fullWidth\n            label=\"Difficulty\"\n            value={example.difficulty}\n            onChange={(e) => {\n              const updated = [...codeExamples];\n              updated[index].difficulty = e.target.value;\n              setCodeExamples(updated);\n            }}\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            fullWidth\n            label=\"Design Code\"\n            value={example.designCode}\n            onChange={(e) => {\n              const updated = [...codeExamples];\n              updated[index].designCode = e.target.value;\n              setCodeExamples(updated);\n            }}\n            multiline\n            rows={4}\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            fullWidth\n            label=\"Testbench Code\"\n            value={example.testbenchCode}\n            onChange={(e) => {\n              const updated = [...codeExamples];\n              updated[index].testbenchCode = e.target.value;\n              setCodeExamples(updated);\n            }}\n            multiline\n            rows={4}\n          />\n        </Box>\n      ))}\n      <Button variant=\"outlined\" onClick={addCodeExample}>+ Add Code Example</Button>\n    </Box>\n  );\n};\n\nexport default VerilogModuleEditor;\n"],"names":["VerilogModuleEditor","moduleInfo","setModuleInfo","useState","id","title","description","image","level","duration","rating","studentsCount","completed","totalChapters","progress","updatedAt","lessons","exercises","students","topics","codeExamples","setCodeExamples","difficulty","designCode","testbenchCode","chapters","setChapters","estimatedTime","sections","content","handleModuleChange","e","target","name","value","handleSectionChange","chapterIndex","sectionIndex","field","updated","_jsxs","Box","sx","maxWidth","mx","p","children","_jsx","Typography","variant","gutterBottom","TextField","fullWidth","label","onChange","mb","multiline","rows","map","chapter","cIndex","border","borderRadius","section","sIndex","borderColor","fontWeight","CKEditor","editor","ClassicEditor","data","event","handleEditorChange","getData","mt","bgcolor","dangerouslySetInnerHTML","__html","Button","onClick","newSectionId","length","push","addSection","addChapter","newId","example","index","addCodeExample"],"sourceRoot":""}