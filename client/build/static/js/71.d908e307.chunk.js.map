{"version":3,"file":"static/js/71.d908e307.chunk.js","mappings":"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","sources":["pages/ResearchPaperWriter.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport URLSITE from '../constant';\n\nconst popularTags = [\n  'UVM', 'RISC-V', 'FPGA', 'SystemVerilog', 'Verification', 'Low Power',\n  'Machine Learning', 'EDA Tools', 'RTL Design', 'Formal Verification',\n  'Power Analysis', 'Hardware Security'\n];\n\nconst PaperForm = () => {\n  const [imageUri, setImageUri] = useState('');\n  const [title, setTitle] = useState('');\n  const [authors, setAuthors] = useState(['']);\n  const [description, setDescription] = useState('');\n  const [paperType, setPaperType] = useState('IEEE');\n  const [whatItCovers, setWhatItCovers] = useState(['']);  // holds selected tags\n  const [source, setSource] = useState('IEEE');\n  const [researchPaperLink, setResearchPaperLink] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const [modalType, setModalType] = useState('success');\n\n  // --- Authors handlers (unchanged) ---\n  const handleAuthorChange = (idx, e) => {\n    const newAuthors = [...authors];\n    newAuthors[idx] = e.target.value;\n    setAuthors(newAuthors);\n  };\n  const addAuthor = () => setAuthors([...authors, '']);\n  const deleteAuthor = (idx) => setAuthors(authors.filter((_, i) => i !== idx));\n\n  // --- What-it-covers handlers (now only selects) ---\n  const handleWhatItCoversChange = (idx, e) => {\n    const newCovers = [...whatItCovers];\n    newCovers[idx] = e.target.value;\n    setWhatItCovers(newCovers);\n  };\n  const addWhatItCovers = () => setWhatItCovers([...whatItCovers, '']);\n  const deleteWhatItCovers = (idx) =>\n    setWhatItCovers(whatItCovers.filter((_, i) => i !== idx));\n\n  // --- Submit ---\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = {\n      imageUri,\n      title,\n      authors,\n      description,\n      paperType,\n      whatItCovers,\n      source,\n      researchPaperLink,\n    };\n    try {\n      const resp = await fetch(`${URLSITE}/api/admin/research-paper-upload`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n      if (resp.ok) {\n        setModalMessage('Your paper has been submitted successfully!');\n        setModalType('success');\n      } else {\n        setModalMessage('Something went wrong. Please try again.');\n        setModalType('error');\n      }\n    } catch {\n      setModalMessage('Network error. Please try again.');\n      setModalType('error');\n    }\n    setShowModal(true);\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-8 bg-white rounded-lg shadow-lg\">\n      <h2 className=\"text-3xl font-semibold mb-8 text-center\">Submit Your Paper</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Image URI */}\n        <div className=\"mb-6\">\n          <label htmlFor=\"imageUri\" className=\"block text-lg font-medium text-gray-700\">\n            Image URI\n          </label>\n          <input\n            type=\"text\"\n            id=\"imageUri\"\n            className=\"mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            value={imageUri}\n            onChange={(e) => setImageUri(e.target.value)}\n            required\n          />\n        </div>\n\n        {/* Title */}\n        <div className=\"mb-6\">\n          <label htmlFor=\"title\" className=\"block text-lg font-medium text-gray-700\">\n            Title\n          </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            className=\"mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n\n        {/* Authors */}\n        <div className=\"mb-6\">\n          <label className=\"block text-lg font-medium text-gray-700\">Authors</label>\n          {authors.map((author, idx) => (\n            <div key={idx} className=\"flex items-center space-x-4 mb-3\">\n              <input\n                type=\"text\"\n                className=\"mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Enter author name\"\n                value={author}\n                onChange={(e) => handleAuthorChange(idx, e)}\n                required\n              />\n              <button\n                type=\"button\"\n                onClick={() => deleteAuthor(idx)}\n                className=\"text-red-500 hover:text-red-700\"\n              >\n                Delete\n              </button>\n              {idx === authors.length - 1 && (\n                <button\n                  type=\"button\"\n                  onClick={addAuthor}\n                  className=\"text-blue-500 hover:text-blue-700\"\n                >\n                  Add Author\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Description */}\n        <div className=\"mb-6\">\n          <label htmlFor=\"description\" className=\"block text-lg font-medium text-gray-700\">\n            Description\n          </label>\n          <textarea\n            id=\"description\"\n            className=\"mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            rows=\"5\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n        </div>\n\n        {/* Paper Type */}\n        <div className=\"mb-6\">\n          <label htmlFor=\"paperType\" className=\"block text-lg font-medium text-gray-700\">\n            Type of Paper\n          </label>\n          <select\n            id=\"paperType\"\n            className=\"mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            value={paperType}\n            onChange={(e) => setPaperType(e.target.value)}\n            required\n          >\n            <option value=\"IEEE\">IEEE</option>\n            <option value=\"ACM\">ACM</option>\n            <option value=\"SPRINGER\">SPRINGER</option>\n            <option value=\"arXiv\">arXiv</option>\n            <option value=\"Elsevier\">Elsevier</option>\n          </select>\n        </div>\n\n        {/* What it covers (select only) */}\n        <div className=\"mb-6\">\n          <label className=\"block text-lg font-medium text-gray-700\">What it covers</label>\n          {whatItCovers.map((tag, idx) => (\n            <div key={idx} className=\"flex items-center space-x-4 mb-3\">\n              <select\n                value={tag}\n                onChange={(e) => handleWhatItCoversChange(idx, e)}\n                className=\"mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                required\n              >\n                <option value=\"\" disabled>\n                  -- select a topic --\n                </option>\n                {popularTags.map((t) => (\n                  <option key={t} value={t}>\n                    {t}\n                  </option>\n                ))}\n              </select>\n              <button\n                type=\"button\"\n                onClick={() => deleteWhatItCovers(idx)}\n                className=\"text-red-500 hover:text-red-700\"\n              >\n                Delete\n              </button>\n              {idx === whatItCovers.length - 1 && (\n                <button\n                  type=\"button\"\n                  onClick={addWhatItCovers}\n                  className=\"text-blue-500 hover:text-blue-700\"\n                >\n                  Add Topic\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Research Paper Link */}\n        <div className=\"mb-6\">\n          <label htmlFor=\"researchPaperLink\" className=\"block text-lg font-medium text-gray-700\">\n            Research Paper Link\n          </label>\n          <input\n            type=\"url\"\n            id=\"researchPaperLink\"\n            className=\"mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            value={researchPaperLink}\n            onChange={(e) => setResearchPaperLink(e.target.value)}\n            required\n          />\n        </div>\n\n        {/* Submit */}\n        <div className=\"mt-6\">\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-600 text-white py-3 px-6 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            Submit Paper\n          </button>\n        </div>\n      </form>\n\n      {/* Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-lg w-full\">\n            <h3\n              className={`text-xl font-semibold mb-4 ${\n                modalType === 'success' ? 'text-green-600' : 'text-red-600'\n              }`}\n            >\n              {modalType === 'success' ? 'Success' : 'Error'}\n            </h3>\n            <p>{modalMessage}</p>\n            <button\n              onClick={() => setShowModal(false)}\n              className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-700\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PaperForm;\n"],"names":["popularTags","PaperForm","imageUri","setImageUri","useState","title","setTitle","authors","setAuthors","description","setDescription","paperType","setPaperType","whatItCovers","setWhatItCovers","source","setSource","researchPaperLink","setResearchPaperLink","showModal","setShowModal","modalMessage","setModalMessage","modalType","setModalType","addAuthor","addWhatItCovers","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","formData","fetch","URLSITE","method","headers","body","JSON","stringify","ok","htmlFor","type","id","value","onChange","target","required","map","author","idx","placeholder","handleAuthorChange","newAuthors","onClick","filter","_","i","deleteAuthor","length","rows","tag","handleWhatItCoversChange","newCovers","disabled","t","deleteWhatItCovers"],"sourceRoot":""}