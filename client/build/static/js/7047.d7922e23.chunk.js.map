{"version":3,"file":"static/js/7047.d7922e23.chunk.js","mappings":"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","sources":["pages/CustomEditor.jsx"],"sourcesContent":["import React, {useRef, useState, useCallback} from 'react';\n// Add this import at the top with other imports\nimport 'highlight.js/styles/github-dark.css'; // or any other theme\nimport {EditorContent, useEditor} from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport ImageExtension from '@tiptap/extension-image';\nimport CodeBlockLowlight from '@tiptap/extension-code-block-lowlight';\nimport TextAlign from '@tiptap/extension-text-align';\nimport UnderlineExtension from '@tiptap/extension-underline';\nimport TextStyle from '@tiptap/extension-text-style';\nimport Color from '@tiptap/extension-color';\nimport Highlight from '@tiptap/extension-highlight';\nimport {createLowlight} from 'lowlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport python from 'highlight.js/lib/languages/python';\nimport css from 'highlight.js/lib/languages/css';\nimport html from 'highlight.js/lib/languages/xml';\nimport json from 'highlight.js/lib/languages/json';\nimport bash from 'highlight.js/lib/languages/bash';\nimport sql from 'highlight.js/lib/languages/sql';\nimport java from 'highlight.js/lib/languages/java';\nimport cpp from 'highlight.js/lib/languages/cpp';\nimport php from 'highlight.js/lib/languages/php';\n\nimport {\n    Bold,\n    Italic,\n    Underline,\n    Strikethrough,\n    Code,\n    Image,\n    AlignLeft,\n    AlignCenter,\n    AlignRight,\n    List,\n    ListOrdered,\n    Quote,\n    Minus,\n    Undo,\n    Redo,\n    Save,\n    Download,\n    Type,\n    Upload,\n    Copy,\n    FileText,\n    Maximize2,\n    Minimize2,\n    RotateCcw,\n    Move\n} from 'lucide-react';\n\n// Create lowlight instance with extensive language support\nconst lowlight = createLowlight();\nlowlight.register('javascript', javascript);\nlowlight.register('python', python);\nlowlight.register('css', css);\nlowlight.register('html', html);\nlowlight.register('json', json);\nlowlight.register('bash', bash);\nlowlight.register('sql', sql);\nlowlight.register('java', java);\nlowlight.register('cpp', cpp);\nlowlight.register('php', php);\n\n// Add this import at the top\nimport {useEffect} from 'react';\n\n\n// Custom Image Extension with resize and alignment\nconst CustomImageExtension = ImageExtension.extend({\n    addAttributes() {\n        return {\n            ...this.parent?.(),\n            width: {\n                default: null,\n                parseHTML: element => element.getAttribute('width'),\n                renderHTML: attributes => {\n                    if (!attributes.width) return {}\n                    return {width: attributes.width}\n                },\n            },\n            height: {\n                default: null,\n                parseHTML: element => element.getAttribute('height'),\n                renderHTML: attributes => {\n                    if (!attributes.height) return {}\n                    return {height: attributes.height}\n                },\n            },\n            align: {\n                default: 'left',\n                parseHTML: element => element.style.float || 'left',\n                renderHTML: attributes => {\n                    const alignMap = {\n                        'left': 'left',\n                        'center': 'none',\n                        'right': 'right'\n                    };\n                    return {\n                        style: `float: ${alignMap[attributes.align] || 'left'}; margin: ${attributes.align === 'center' ? '0 auto' : '10px'}; display: ${attributes.align === 'center' ? 'block' : 'inline-block'};`\n                    }\n                },\n            },\n        }\n    },\n});\n\nconst RichTextEditor = ({editorContent,setEditorContent}) => {\n    const fileInputRef = useRef();\n    const [fontSize, setFontSize] = useState(16);\n    const [showUploadModal, setShowUploadModal] = useState(false);\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const [showImageModal, setShowImageModal] = useState(false);\n    const [selectedImage, setSelectedImage] = useState(null);\n\n    const editor = useEditor({\n  extensions: [\n    StarterKit,\n    CustomImageExtension.configure({\n      HTMLAttributes: {\n        class: 'max-w-full h-auto rounded-lg shadow-lg border border-purple-200 cursor-pointer',\n      },\n    }),\n    CodeBlockLowlight.configure({\n      lowlight,\n      HTMLAttributes: {\n        class: 'bg-gray-900 text-gray-100 p-4 rounded-lg text-sm font-mono overflow-x-auto border border-purple-300 shadow-lg hljs',\n      },\n    }),\n    TextAlign.configure({\n      types: ['heading', 'paragraph'],\n    }),\n    UnderlineExtension,\n    TextStyle,\n    Color,\n    Highlight.configure({\n      multicolor: true,\n    }),\n  ],\n  content: `<p>Start typing...</p>`,\n  editorProps: {\n    attributes: {\n      class: 'prose prose-purple max-w-none focus:outline-none min-h-full p-6 text-gray-800',\n      style: `min-height: calc(100vh - 200px); font-size: ${fontSize}px;`,\n    },\n    handleClickOn: (view, pos, node, nodePos, event) => {\n      if (node.type.name === 'image') {\n        const { src, width, height, align } = node.attrs;\n        setSelectedImage({ src, width, height, align, pos: nodePos });\n        setShowImageModal(true);\n        return true;\n      }\n      return false;\n    },\n  },\n\n  // 🔥 Hook into editor changes here\n  onUpdate: ({ editor }) => {\n    const html = editor.getHTML();\n    setEditorContent(html)\n},\n});\n\n\n\n    // Add this useEffect after your editor definition\n    useEffect(() => {\n        if (editor) {\n            const handleUpdate = () => {\n                // Delay to ensure DOM is updated\n                setTimeout(() => {\n                    const previewEl = document.querySelector('.preview-content');\n                    if (previewEl && window.hljs) {\n                        const codeBlocks = previewEl.querySelectorAll('pre code:not(.hljs)');\n                        codeBlocks.forEach(block => {\n                            window.hljs.highlightElement(block);\n                        });\n                    }\n                }, 100);\n            };\n\n            editor.on('update', handleUpdate);\n            handleUpdate(); // Initial highlight\n\n            return () => {\n                editor.off('update', handleUpdate);\n            };\n        }\n    }, [editor]);\n\n\n    const addImageFromUrl = useCallback(() => {\n        const url = window.prompt('Enter image URL');\n        if (url && editor) {\n            editor.chain().focus().setImage({\n                src: url,\n                width: '300px',\n                height: 'auto',\n                align: 'left'\n            }).run();\n        }\n    }, [editor]);\n\n    const addImageFromFile = useCallback((event) => {\n        const file = event.target.files[0];\n        if (!file || !editor) return;\n\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            editor.chain().focus().setImage({\n                src: reader.result,\n                width: '300px',\n                height: 'auto',\n                align: 'left'\n            }).run();\n        };\n        reader.readAsDataURL(file);\n    }, [editor]);\n\n    const updateImageAttributes = useCallback((attributes) => {\n        if (!editor || !selectedImage) return;\n\n        editor.chain()\n            .focus()\n            .updateAttributes('image', attributes)\n            .run();\n\n        setSelectedImage(prev => ({...prev, ...attributes}));\n    }, [editor, selectedImage]);\n\n    const saveContent = useCallback(() => {\n        if (!editor) return;\n        const content = editor.getHTML();\n        // console.log(content)\n        uploadFunction(content);\n    }, [editor]);\n\n    const exportAsText = useCallback(() => {\n        if (!editor) return;\n        const content = editor.getText();\n        const blob = new Blob([content], {type: 'text/plain'});\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'purple-document.txt';\n        a.click();\n        URL.revokeObjectURL(url);\n    }, [editor]);\n\n    const uploadContent = useCallback(() => {\n        if (!editor) return;\n        setShowUploadModal(true);\n    }, [editor]);\n\n    const copyToClipboard = useCallback(async () => {\n        if (!editor) return;\n        const content = editor.getHTML();\n        try {\n            await navigator.clipboard.writeText(content);\n            alert('HTML content copied to clipboard!');\n        } catch (err) {\n            console.error('Failed to copy: ', err);\n            const textArea = document.createElement('textarea');\n            textArea.value = content;\n            document.body.appendChild(textArea);\n            textArea.select();\n            document.execCommand('copy');\n            document.body.removeChild(textArea);\n            alert('HTML content copied to clipboard!');\n        }\n    }, [editor]);\n\n    const changeFontSize = useCallback((size) => {\n        setFontSize(size);\n        const editorEl = document.querySelector('.ProseMirror');\n        if (editorEl) {\n            editorEl.style.fontSize = `${size}px`;\n        }\n    }, []);\n\n    if (!editor) {\n        return (\n            <div\n                className=\"flex items-center justify-center h-screen bg-gradient-to-br from-purple-900 via-purple-800 to-indigo-900\">\n                <div className=\"text-white text-xl\">Loading Enhanced Split-Screen Editor...</div>\n            </div>\n        );\n    }\n\n    const ToolbarButton = ({onClick, isActive = false, disabled = false, children, title}) => (\n        <button\n            onClick={onClick}\n            disabled={disabled}\n            title={title}\n            className={`\n        p-1.5 rounded-md transition-all duration-200 text-sm\n        ${isActive ? 'bg-purple-600 text-white shadow-md scale-105' : 'text-purple-600 hover:bg-purple-100 hover:text-purple-700'}\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'hover:scale-105 hover:shadow-sm'}\n      `}\n        >\n            {children}\n        </button>\n    );\n\n    return (\n        <div className=\"h-screen bg-gradient-to-br from-purple-50 via-white to-purple-50 flex flex-col relative z-10\">\n            {/* Header */}\n            <div className=\"bg-gradient-to-r from-purple-600 via-purple-700 to-indigo-600 text-white p-3 shadow-lg\">\n                <div className=\"flex justify-between items-center\">\n                    <div>\n                        <h1 className=\"text-2xl font-bold\">Enhanced Split-Screen Rich Text Editor</h1>\n                        <p className=\"text-purple-100 text-sm\">Editor on the left, live preview on the right with syntax\n                            highlighting</p>\n                    </div>\n                    <button\n                        onClick={() => setIsFullScreen(!isFullScreen)}\n                        className=\"p-2 bg-white bg-opacity-20 rounded-lg hover:bg-opacity-30 transition-colors\"\n                        title={isFullScreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}\n                    >\n                        {isFullScreen ? <Minimize2 size={20}/> : <Maximize2 size={20}/>}\n                    </button>\n                </div>\n            </div>\n\n            {/* Toolbar */}\n            <div\n                className=\"sticky top-0 z-40 border-b border-purple-200 bg-gradient-to-r from-purple-50 to-indigo-50 p-3 shadow-sm backdrop-blur-sm bg-opacity-95\">\n                <div className=\"flex flex-wrap gap-1 items-center\">\n                    {/* Text Formatting */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleBold().run()}\n                            isActive={editor.isActive('bold')}\n                            title=\"Bold\"\n                        >\n                            <Bold size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleItalic().run()}\n                            isActive={editor.isActive('italic')}\n                            title=\"Italic\"\n                        >\n                            <Italic size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleUnderline().run()}\n                            isActive={editor.isActive('underline')}\n                            title=\"Underline\"\n                        >\n                            <Underline size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleStrike().run()}\n                            isActive={editor.isActive('strike')}\n                            title=\"Strikethrough\"\n                        >\n                            <Strikethrough size={14}/>\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Alignment */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().setTextAlign('left').run()}\n                            isActive={editor.isActive({textAlign: 'left'})}\n                            title=\"Align Left\"\n                        >\n                            <AlignLeft size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().setTextAlign('center').run()}\n                            isActive={editor.isActive({textAlign: 'center'})}\n                            title=\"Align Center\"\n                        >\n                            <AlignCenter size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().setTextAlign('right').run()}\n                            isActive={editor.isActive({textAlign: 'right'})}\n                            title=\"Align Right\"\n                        >\n                            <AlignRight size={14}/>\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Lists */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleBulletList().run()}\n                            isActive={editor.isActive('bulletList')}\n                            title=\"Bullet List\"\n                        >\n                            <List size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleOrderedList().run()}\n                            isActive={editor.isActive('orderedList')}\n                            title=\"Numbered List\"\n                        >\n                            <ListOrdered size={14}/>\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Other Elements */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleBlockquote().run()}\n                            isActive={editor.isActive('blockquote')}\n                            title=\"Quote\"\n                        >\n                            <Quote size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleCodeBlock().run()}\n                            isActive={editor.isActive('codeBlock')}\n                            title=\"Code Block\"\n                        >\n                            <Code size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().setHorizontalRule().run()}\n                            title=\"Horizontal Rule\"\n                        >\n                            <Minus size={14}/>\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Colors */}\n                    <div\n                        className=\"flex items-center gap-1.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <input\n                            type=\"color\"\n                            onChange={(e) => editor.chain().focus().setColor(e.target.value).run()}\n                            className=\"w-6 h-6 rounded cursor-pointer border border-purple-300 hover:border-purple-500\"\n                            title=\"Text Color\"\n                            defaultValue=\"#8b5cf6\"\n                        />\n                        <input\n                            type=\"color\"\n                            onChange={(e) => editor.chain().focus().toggleHighlight({color: e.target.value}).run()}\n                            className=\"w-6 h-6 rounded cursor-pointer border border-purple-300 hover:border-purple-500\"\n                            title=\"Highlight Color\"\n                            defaultValue=\"#e879f9\"\n                        />\n                    </div>\n\n                    {/* Undo/Redo */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().undo().run()}\n                            disabled={!editor.can().undo()}\n                            title=\"Undo\"\n                        >\n                            <Undo size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().redo().run()}\n                            disabled={!editor.can().redo()}\n                            title=\"Redo\"\n                        >\n                            <Redo size={14}/>\n                        </ToolbarButton>\n                    </div>\n                </div>\n\n                {/* Second Row */}\n                <div className=\"flex flex-wrap gap-1 items-center mt-2 pt-2 border-t border-purple-200\">\n                    {/* Font Size */}\n                    <div\n                        className=\"flex items-center gap-1.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <Type size={14} className=\"text-purple-600\"/>\n                        <select\n                            value={fontSize}\n                            onChange={(e) => changeFontSize(Number(e.target.value))}\n                            className=\"px-2 py-1 border border-purple-300 rounded text-xs focus:border-purple-500 focus:ring-1 focus:ring-purple-200\"\n                        >\n                            <option value={12}>12px</option>\n                            <option value={14}>14px</option>\n                            <option value={16}>16px</option>\n                            <option value={18}>18px</option>\n                            <option value={20}>20px</option>\n                            <option value={24}>24px</option>\n                            <option value={32}>32px</option>\n                        </select>\n                    </div>\n\n                    {/* Headings */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        {[1, 2, 3].map((level) => (\n                            <ToolbarButton\n                                key={level}\n                                onClick={() => editor.chain().focus().toggleHeading({level}).run()}\n                                isActive={editor.isActive('heading', {level})}\n                                title={`Heading ${level}`}\n                            >\n                                <span className=\"font-bold text-xs\">H{level}</span>\n                            </ToolbarButton>\n                        ))}\n                    </div>\n\n                    {/* Image */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton onClick={addImageFromUrl} title=\"Add Image from URL\">\n                            <Image size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => fileInputRef.current?.click()}\n                            title=\"Upload Image\"\n                        >\n                            <div className=\"flex items-center gap-0.5\">\n                                <Image size={14}/>\n                                <span className=\"text-xs\">+</span>\n                            </div>\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Actions */}\n                    <div\n                        className=\"flex items-center gap-0.5 ml-auto p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton onClick={uploadContent} title=\"View HTML Source\">\n                            <Upload size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton onClick={copyToClipboard} title=\"Copy HTML to Clipboard\">\n                            <Copy size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton onClick={saveContent} title=\"Save as HTML\">\n                            <Save size={14}/>\n                        </ToolbarButton>\n                        <ToolbarButton onClick={exportAsText} title=\"Export as Text\">\n                            <Download size={14}/>\n                        </ToolbarButton>\n                    </div>\n                </div>\n            </div>\n\n            {/* Split Screen Content */}\n            <div className=\"flex-1 flex\">\n                {/* Editor Side (Left) */}\n                <div\n                    className={`${isFullScreen ? 'w-full' : 'w-1/2'} bg-white border-r-2 border-purple-200 flex flex-col`}>\n                    <div className=\"bg-purple-100 px-3 py-2 border-b border-purple-200\">\n                        <h3 className=\"text-xs font-semibold text-purple-700 flex items-center gap-1\">\n                            <FileText size={12}/>\n                            Editor\n                        </h3>\n                    </div>\n                    <div className=\"flex-1 overflow-auto\">\n                        <EditorContent\n                            editor={editor}\n                            className=\"h-full\"\n                        />\n                    </div>\n                </div>\n\n                {/* Preview Side (Right) */}\n                {!isFullScreen && (\n                    <div className=\"w-1/2 bg-gradient-to-br from-purple-50 to-white flex flex-col\">\n                        <div className=\"bg-purple-100 px-3 py-2 border-b border-purple-200\">\n                            <h3 className=\"text-xs font-semibold text-purple-700 flex items-center gap-1\">\n                                <FileText size={12}/>\n                                Live Preview\n                            </h3>\n                        </div>\n                        <div className=\"flex-1 p-4 overflow-auto\">\n                            <div\n                                className=\"prose prose-purple max-w-none bg-white p-4 rounded-lg shadow-lg border border-purple-200 min-h-full preview-content\"\n                                dangerouslySetInnerHTML={{__html: editor.getHTML()}}\n                                key={editor.getHTML()} // Force re-render when content changes\n                                style={{fontSize: `${fontSize}px`}}\n                            />\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {/* Status Bar */}\n            <div\n                className=\"bg-gradient-to-r from-purple-100 to-indigo-100 px-4 py-2 text-xs text-purple-700 border-t border-purple-200 shadow-sm\">\n                <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center gap-3\">\n                        <div className=\"flex items-center gap-1\">\n                            <FileText size={12}/>\n                            <span>Words: {editor.getText().split(' ').filter(word => word.length > 0).length}</span>\n                        </div>\n                        <div>Characters: {editor.getText().length}</div>\n                    </div>\n                    <div className=\"text-xs text-purple-600\">\n                        Enhanced Split-Screen Editor • {isFullScreen ? 'Editor Only' : 'Editor + Preview'} • Click\n                        images to edit\n                    </div>\n                </div>\n            </div>\n\n            {/* Image Edit Modal */}\n            {showImageModal && selectedImage && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                    <div className=\"bg-white rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 border-4 border-purple-200\">\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h3 className=\"text-xl font-bold text-purple-700 flex items-center gap-2\">\n                                <Move size={20}/>\n                                Edit Image\n                            </h3>\n                            <button\n                                onClick={() => setShowImageModal(false)}\n                                className=\"text-purple-500 hover:text-purple-700 text-2xl font-bold\"\n                            >\n                                ×\n                            </button>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-purple-700 mb-2\">Width</label>\n                                <input\n                                    type=\"text\"\n                                    value={selectedImage.width || '300px'}\n                                    onChange={(e) => updateImageAttributes({width: e.target.value})}\n                                    className=\"w-full px-3 py-2 border border-purple-300 rounded-lg focus:border-purple-500 focus:ring-1 focus:ring-purple-200\"\n                                    placeholder=\"300px, 50%, auto\"\n                                />\n                            </div>\n\n                            <div>\n                                <label className=\"block text-sm font-medium text-purple-700 mb-2\">Height</label>\n                                <input\n                                    type=\"text\"\n                                    value={selectedImage.height || 'auto'}\n                                    onChange={(e) => updateImageAttributes({height: e.target.value})}\n                                    className=\"w-full px-3 py-2 border border-purple-300 rounded-lg focus:border-purple-500 focus:ring-1 focus:ring-purple-200\"\n                                    placeholder=\"200px, 50%, auto\"\n                                />\n                            </div>\n\n                            <div>\n                                <label className=\"block text-sm font-medium text-purple-700 mb-2\">Alignment</label>\n                                <div className=\"flex gap-2\">\n                                    <button\n                                        onClick={() => updateImageAttributes({align: 'left'})}\n                                        className={`flex-1 flex items-center justify-center gap-1 px-3 py-2 rounded-lg transition-colors ${\n                                            selectedImage.align === 'left'\n                                                ? 'bg-purple-600 text-white'\n                                                : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\n                                        }`}\n                                    >\n                                        <AlignLeft size={16}/>\n                                        Left\n                                    </button>\n                                    <button\n                                        onClick={() => updateImageAttributes({align: 'center'})}\n                                        className={`flex-1 flex items-center justify-center gap-1 px-3 py-2 rounded-lg transition-colors ${\n                                            selectedImage.align === 'center'\n                                                ? 'bg-purple-600 text-white'\n                                                : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\n                                        }`}\n                                    >\n                                        <AlignCenter size={16}/>\n                                        Center\n                                    </button>\n                                    <button\n                                        onClick={() => updateImageAttributes({align: 'right'})}\n                                        className={`flex-1 flex items-center justify-center gap-1 px-3 py-2 rounded-lg transition-colors ${\n                                            selectedImage.align === 'right'\n                                                ? 'bg-purple-600 text-white'\n                                                : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\n                                        }`}\n                                    >\n                                        <AlignRight size={16}/>\n                                        Right\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div className=\"flex gap-3 mt-6\">\n                                <button\n                                    onClick={() => updateImageAttributes({width: '100px', height: 'auto'})}\n                                    className=\"flex items-center gap-2 px-3 py-2 bg-purple-100 text-purple-700 rounded-lg hover:bg-purple-200 transition-colors text-sm\"\n                                >\n                                    Small\n                                </button>\n                                <button\n                                    onClick={() => updateImageAttributes({width: '300px', height: 'auto'})}\n                                    className=\"flex items-center gap-2 px-3 py-2 bg-purple-100 text-purple-700 rounded-lg hover:bg-purple-200 transition-colors text-sm\"\n                                >\n                                    Medium\n                                </button>\n                                <button\n                                    onClick={() => updateImageAttributes({width: '500px', height: 'auto'})}\n                                    className=\"flex items-center gap-2 px-3 py-2 bg-purple-100 text-purple-700 rounded-lg hover:bg-purple-200 transition-colors text-sm\"\n                                >\n                                    Large\n                                </button>\n                                <button\n                                    onClick={() => setShowImageModal(false)}\n                                    className=\"ml-auto px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\n                                >\n                                    Done\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Upload Modal */}\n            {showUploadModal && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                    <div\n                        className=\"bg-white rounded-xl shadow-2xl p-6 max-w-4xl w-full mx-4 max-h-96 border-4 border-purple-200\">\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h3 className=\"text-xl font-bold text-purple-700\">HTML Source Code</h3>\n                            <button\n                                onClick={() => setShowUploadModal(false)}\n                                className=\"text-purple-500 hover:text-purple-700 text-2xl font-bold\"\n                            >\n                                ×\n                            </button>\n                        </div>\n                        <div className=\"bg-gray-100 rounded-lg p-4 max-h-64 overflow-auto border border-purple-200\">\n              <pre className=\"text-sm text-gray-800 whitespace-pre-wrap font-mono\">\n                {editor.getHTML()}\n              </pre>\n                        </div>\n                        <div className=\"flex gap-3 mt-4\">\n                            <button\n                                onClick={copyToClipboard}\n                                className=\"flex items-center gap-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\n                            >\n                                <Copy size={16}/>\n                                Copy HTML\n                            </button>\n                            <button\n                                onClick={() => setShowUploadModal(false)}\n                                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition-colors\"\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Hidden File Input */}\n            <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={addImageFromFile}\n                className=\"hidden\"\n            />\n\n            {/* Custom Styles for Preview */}\n            <style jsx>{`\n                /* Highlight.js base styles */\n                .hljs {\n                    display: block;\n                    overflow-x: auto;\n                    padding: 0.5em;\n                    background: #1f2937;\n                    color: #f9fafb;\n                }\n\n                .hljs-comment,\n                .hljs-quote {\n                    color: #9ca3af;\n                    font-style: italic;\n                }\n\n                .hljs-keyword,\n                .hljs-selector-tag,\n                .hljs-subst {\n                    color: #f472b6;\n                    font-weight: bold;\n                }\n\n                .hljs-number,\n                .hljs-literal,\n                .hljs-variable,\n                .hljs-template-variable,\n                .hljs-tag .hljs-attr {\n                    color: #60a5fa;\n                }\n\n                .hljs-string,\n                .hljs-doctag {\n                    color: #34d399;\n                }\n\n                .hljs-title,\n                .hljs-section,\n                .hljs-selector-id {\n                    color: #fbbf24;\n                    font-weight: bold;\n                }\n\n                .hljs-subst {\n                    font-weight: normal;\n                }\n\n                .hljs-type,\n                .hljs-class .hljs-title {\n                    color: #a78bfa;\n                    font-weight: bold;\n                }\n\n                .hljs-tag,\n                .hljs-name,\n                .hljs-attribute {\n                    color: #f87171;\n                    font-weight: normal;\n                }\n\n                .hljs-regexp,\n                .hljs-link {\n                    color: #10b981;\n                }\n\n                .hljs-symbol,\n                .hljs-bullet {\n                    color: #8b5cf6;\n                }\n\n                .hljs-built_in,\n                .hljs-builtin-name {\n                    color: #06b6d4;\n                }\n\n                .hljs-meta {\n                    color: #9333ea;\n                }\n\n                .hljs-deletion {\n                    background: #fca5a5;\n                }\n\n                .hljs-addition {\n                    background: #86efac;\n                }\n\n                .hljs-emphasis {\n                    font-style: italic;\n                }\n\n                .hljs-strong {\n                    font-weight: bold;\n                }\n\n                .preview-content {\n                    font-family: inherit;\n                    line-height: 1.6;\n                }\n\n                .preview-content h1, .preview-content h2, .preview-content h3 {\n                    margin-top: 1.5em;\n                    margin-bottom: 0.5em;\n                    font-weight: bold;\n                }\n\n                .preview-content h1 {\n                    font-size: 2em;\n                    border-bottom: 2px solid #8b5cf6;\n                    padding-bottom: 0.3em;\n                }\n\n                .preview-content h2 {\n                    font-size: 1.5em;\n                    color: #7c3aed;\n                }\n\n                .preview-content h3 {\n                    font-size: 1.25em;\n                    color: #8b5cf6;\n                }\n\n                .preview-content p {\n                    margin-bottom: 1em;\n                }\n\n                .preview-content ul, .preview-content ol {\n                    margin-left: 1.5em;\n                    margin-bottom: 1em;\n                }\n\n                .preview-content li {\n                    margin-bottom: 0.25em;\n                }\n\n                .preview-content blockquote {\n                    border-left: 4px solid #8b5cf6;\n                    margin: 1.5em 0;\n                    padding-left: 1em;\n                    font-style: italic;\n                    background: #f3f4f6;\n                    padding: 1em;\n                    border-radius: 0 8px 8px 0;\n                }\n\n                .preview-content pre {\n                    background: #1f2937 !important;\n                    color: #f9fafb !important;\n                    padding: 1em;\n                    border-radius: 8px;\n                    overflow-x: auto;\n                    margin: 1em 0;\n                    border: 1px solid #8b5cf6;\n                }\n\n                .preview-content code {\n                    background: #f3f4f6;\n                    padding: 0.2em 0.4em;\n                    border-radius: 4px;\n                    font-size: 0.9em;\n                    font-family: 'Monaco', 'Consolas', monospace;\n                }\n\n                .preview-content pre code {\n                    background: transparent;\n                    padding: 0;\n                    color: inherit;\n                }\n\n                .preview-content img {\n                    max-width: 100%;\n                    height: auto;\n                    border-radius: 8px;\n                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n                    border: 1px solid #e5e7eb;\n                    cursor: pointer;\n                    transition: transform 0.2s;\n                }\n\n                .preview-content img:hover {\n                    transform: scale(1.02);\n                }\n\n                .preview-content hr {\n                    border: none;\n                    height: 2px;\n                    background: linear-gradient(to right, #8b5cf6, #ec4899);\n                    margin: 2em 0;\n                    border-radius: 1px;\n                }\n\n                .preview-content strong {\n                    color: #7c3aed;\n                    font-weight: 600;\n                }\n\n                .preview-content em {\n                    color: #8b5cf6;\n                }\n\n                .preview-content u {\n                    text-decoration-color: #8b5cf6;\n                }\n\n                /* Syntax highlighting styles for preview */\n                .preview-content .hljs {\n                    background: #1f2937 !important;\n                }\n\n                .preview-content .hljs-keyword {\n                    color: #f472b6;\n                }\n\n                .preview-content .hljs-string {\n                    color: #34d399;\n                }\n\n                .preview-content .hljs-number {\n                    color: #60a5fa;\n                }\n\n                .preview-content .hljs-comment {\n                    color: #9ca3af;\n                    font-style: italic;\n                }\n\n                .preview-content .hljs-function {\n                    color: #fbbf24;\n                }\n\n                .preview-content .hljs-variable {\n                    color: #a78bfa;\n                }\n            `}</style>\n        </div>\n    );\n};\n\nexport default RichTextEditor;"],"names":["lowlight","createLowlight","register","javascript","python","css","html","json","bash","sql","java","cpp","php","CustomImageExtension","ImageExtension","extend","addAttributes","_this$parent","this","parent","call","width","default","parseHTML","element","getAttribute","renderHTML","attributes","height","align","style","float","_ref","editorContent","setEditorContent","fileInputRef","useRef","fontSize","setFontSize","useState","showUploadModal","setShowUploadModal","isFullScreen","setIsFullScreen","showImageModal","setShowImageModal","selectedImage","setSelectedImage","editor","useEditor","extensions","StarterKit","configure","HTMLAttributes","class","CodeBlockLowlight","TextAlign","types","UnderlineExtension","TextStyle","Color","Highlight","multicolor","content","editorProps","handleClickOn","view","pos","node","nodePos","event","type","name","src","attrs","onUpdate","_ref2","getHTML","useEffect","handleUpdate","setTimeout","previewEl","document","querySelector","window","hljs","querySelectorAll","forEach","block","highlightElement","on","off","addImageFromUrl","useCallback","url","prompt","chain","focus","setImage","run","addImageFromFile","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","updateImageAttributes","updateAttributes","prev","saveContent","uploadFunction","exportAsText","getText","blob","Blob","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","uploadContent","copyToClipboard","async","navigator","clipboard","writeText","alert","err","console","error","textArea","value","body","appendChild","select","execCommand","removeChild","changeFontSize","size","editorEl","_jsx","className","children","ToolbarButton","_ref3","onClick","isActive","disabled","title","_jsxs","Minimize2","Maximize2","toggleBold","Bold","toggleItalic","Italic","toggleUnderline","Underline","toggleStrike","Strikethrough","setTextAlign","textAlign","AlignLeft","AlignCenter","AlignRight","toggleBulletList","List","toggleOrderedList","ListOrdered","toggleBlockquote","Quote","toggleCodeBlock","Code","setHorizontalRule","Minus","onChange","e","setColor","defaultValue","toggleHighlight","color","undo","can","Undo","redo","Redo","Type","Number","map","level","toggleHeading","Image","_fileInputRef$current","current","Upload","Copy","Save","Download","FileText","EditorContent","dangerouslySetInnerHTML","__html","split","filter","word","length","Move","placeholder","ref","accept","jsx"],"sourceRoot":""}