{"version":3,"file":"static/js/884.baf96bcc.chunk.js","mappings":"kOAIA,MAAMA,EAAiB,CACrB,CAAEC,MAAO,OACT,CAAEA,MAAO,QACT,CAAEA,MAAO,eACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,0BACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,SA0MX,EAvMiBC,KACf,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAMC,IAAWN,EAAAA,EAAAA,UAAS,KAC1BO,EAAUC,IAAeR,EAAAA,EAAAA,UAAS,CAAC,MACnCS,EAAWC,IAAgBV,EAAAA,EAAAA,UAAS,KACpCW,EAAOC,IAAYZ,EAAAA,EAAAA,UAAS,CAAEa,MAAM,EAAOC,QAAS,GAAIC,OAAO,IA0DtE,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gEAA+DC,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAAoBC,SAAC,kBAEnCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,YACZzB,MAAOE,EACPwB,SAAUC,GAAKxB,EAAYwB,EAAEC,OAAO5B,OACpCqB,UAAU,qCAGZE,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,QACZzB,MAAOK,EACPqB,SAAUC,GAAKrB,EAASqB,EAAEC,OAAO5B,OACjCqB,UAAU,qCAGZE,EAAAA,EAAAA,KAAA,YACEE,YAAY,cACZzB,MAAOO,EACPmB,SAAUC,GAAKnB,EAAemB,EAAEC,OAAO5B,OACvCqB,UAAU,mDAIZD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,gBAAeC,SAAC,UACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,MAAA,UACES,aAAa,GACbH,SA3EWC,IACnB,MAAMG,EAAMH,EAAEC,OAAO5B,MACjB8B,IAAQrB,EAAKsB,SAASD,IACxBpB,EAAQ,IAAID,EAAMqB,IAEpBH,EAAEC,OAAOI,cAAgB,CAAC,EAuElBX,UAAU,2BAA0BC,SAAA,EAEpCC,EAAAA,EAAAA,KAAA,UAAQvB,MAAM,GAAGiC,UAAQ,EAAAX,SAAC,uBAGzBvB,EAAemC,KAAIC,IAClBZ,EAAAA,EAAAA,KAAA,UAAwBvB,MAAOmC,EAAInC,MAAMsB,SACtCa,EAAInC,OADMmC,EAAInC,cAMtBS,EAAK2B,OAAS,IACbb,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4BAA2BC,SACtCb,EAAKyB,KAAIC,IACRf,EAAAA,EAAAA,MAAA,MAEEC,UAAU,qEAAoEC,SAAA,CAE7Ea,GACDZ,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLa,QAASA,KAAMC,OA3FPC,EA2FuBJ,OA1F7CzB,EAAQD,EAAK+B,QAAOC,GAAKA,IAAMF,KADTA,KA2F4B,EACpClB,UAAU,mDAAkDC,SAC7D,WARIa,WAkBff,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,gBAAeC,SAAC,aAChCX,EAASuB,KAAI,CAACQ,EAAMC,KACnBvB,EAAAA,EAAAA,MAAA,OAAeC,UAAU,+BAA8BC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLxB,MAAO0C,EACPhB,SAAUC,GA5HIiB,EAACC,EAAQC,EAASH,EAAK3C,KAC/C,MAAM+C,EAAO,IAAID,GACjBC,EAAKJ,GAAO3C,EACZ6C,EAAOE,EAAK,EAyHaH,CAAkBhC,EAAaD,EAAUgC,EAAKhB,EAAEC,OAAO5B,OACtEqB,UAAU,kCACVI,YAAY,oBAEdF,EAAAA,EAAAA,KAAA,UACEc,QAASA,IAtIKW,EAACH,EAAQC,EAASH,KAC1C,MAAMI,EAAO,IAAID,GACjBC,EAAKE,OAAON,EAAK,GACjBE,EAAOE,EAAK,EAmIaC,CAAkBpC,EAAaD,EAAUgC,GACxDtB,UAAU,0CAAyCC,SACpD,aAXOqB,MAgBZpB,EAAAA,EAAAA,KAAA,UACEc,QAASA,KAAMa,OA/ISJ,EA+ImBnC,EAAbC,EA/Ia,IAAIkC,EAAS,KAAzCI,IAASJ,CA+I6B,EACrDzB,UAAU,6CAA4CC,SACvD,uBAMHF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,gBAC5CC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLxB,MAAOa,EACPa,SAAUC,GAAKb,EAAaa,EAAEC,OAAO5B,OACrCqB,UAAU,kCACVI,YAAY,kCAIhBF,EAAAA,EAAAA,KAAA,UACEc,QA3Iec,UACnB,MAAMC,EAAkBzC,EAAS6B,QAAOa,GAAkB,KAAbA,EAAEC,SAE/C,GACGpD,EAASoD,QACTjD,EAAMiD,QACN/C,EAAY+C,QACG,IAAhB7C,EAAK2B,QACsB,IAA3BgB,EAAgBhB,QACfvB,EAAUyC,OAMb,IACE,MAAMC,EAAU,CACdrD,WACAG,QACAE,cACAE,OACAE,SAAUyC,EACVvC,UAAWA,EAAUyC,cAEjBE,EAAAA,EAAMC,KAAK,GAAGC,EAAAA,0BAAiCH,GACrDvC,EAAS,CAAEC,MAAM,EAAMC,QAAS,+BAAgCC,OAAO,GACzE,CAAE,MACAH,EAAS,CAAEC,MAAM,EAAMC,QAAS,wBAAyBC,OAAO,GAClE,MAjBEH,EAAS,CAAEC,MAAM,EAAMC,QAAS,sCAAuCC,OAAO,GAiBhF,EAgHIE,UAAU,oEAAmEC,SAC9E,gBAKAP,EAAME,OACLM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCC,SAAA,EACtDC,EAAAA,EAAAA,KAAA,MAAIF,UAAW,0BAAyBN,EAAMI,MAAQ,eAAiB,kBAAmBG,SACvFP,EAAMG,WAETK,EAAAA,EAAAA,KAAA,UACEc,QAASA,IAAMrB,EAAS,IAAKD,EAAOE,MAAM,IAC1CI,UAAU,kEAAiEC,SAC5E,iBAMH,C","sources":["pages/BlogWriter.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport URLSITE from '../constant';\n\nconst predefinedTags = [\n  { value: 'all' },\n  { value: 'vlsi' },\n  { value: 'electronics' },\n  { value: 'diy-electronics' },\n  { value: 'electrical-engineering' },\n  { value: 'electronics-design' },\n  { value: 'fpga' }\n];\n\nconst BlogForm = () => {\n  const [imageUrl, setImageUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState([]);             // start empty\n  const [spectrum, setSpectrum] = useState(['']);\n  const [paperLink, setPaperLink] = useState('');\n  const [modal, setModal] = useState({ show: false, message: '', error: false });\n\n  // Spectrum helpers (unchanged)\n  const handleAddField = (setter, current) => setter([...current, '']);\n  const handleRemoveField = (setter, current, idx) => {\n    const copy = [...current];\n    copy.splice(idx, 1);\n    setter(copy);\n  };\n  const handleFieldChange = (setter, current, idx, value) => {\n    const copy = [...current];\n    copy[idx] = value;\n    setter(copy);\n  };\n\n  // Tag handlers\n  const handleAddTag = e => {\n    const val = e.target.value;\n    if (val && !tags.includes(val)) {\n      setTags([...tags, val]);\n    }\n    e.target.selectedIndex = 0; // reset dropdown\n  };\n  const handleDeleteTag = tagToRemove => {\n    setTags(tags.filter(t => t !== tagToRemove));\n  };\n\n  const handleSubmit = async () => {\n    const cleanedSpectrum = spectrum.filter(s => s.trim() !== '');\n\n    if (\n      !imageUrl.trim() ||\n      !title.trim() ||\n      !description.trim() ||\n      tags.length === 0 ||\n      cleanedSpectrum.length === 0 ||\n      !paperLink.trim()\n    ) {\n      setModal({ show: true, message: 'Please fill in all required fields.', error: true });\n      return;\n    }\n\n    try {\n      const payload = {\n        imageUrl,\n        title,\n        description,\n        tags,\n        spectrum: cleanedSpectrum,\n        paperLink: paperLink.trim(),\n      };\n      await axios.post(`${URLSITE}/api/admin/blog-upload`, payload);\n      setModal({ show: true, message: 'Blog submitted successfully!', error: false });\n    } catch {\n      setModal({ show: true, message: 'Error submitting blog', error: true });\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white shadow-xl rounded-xl space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Write a Blog</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"Image URL\"\n        value={imageUrl}\n        onChange={e => setImageUrl(e.target.value)}\n        className=\"w-full border rounded px-3 py-2\"\n      />\n\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        value={title}\n        onChange={e => setTitle(e.target.value)}\n        className=\"w-full border rounded px-3 py-2\"\n      />\n\n      <textarea\n        placeholder=\"Description\"\n        value={description}\n        onChange={e => setDescription(e.target.value)}\n        className=\"w-full border rounded px-3 py-2 min-h-[120px]\"\n      />\n\n      {/* Tags (select from predefinedTags) */}\n      <div>\n        <label className=\"font-semibold\">Tags</label>\n        <div className=\"mt-2\">\n          <select\n            defaultValue=\"\"\n            onChange={handleAddTag}\n            className=\"border rounded px-3 py-2\"\n          >\n            <option value=\"\" disabled>\n              -- select a tag --\n            </option>\n            {predefinedTags.map(tag => (\n              <option key={tag.value} value={tag.value}>\n                {tag.value}\n              </option>\n            ))}\n          </select>\n        </div>\n        {tags.length > 0 && (\n          <ul className=\"flex flex-wrap gap-2 mt-3\">\n            {tags.map(tag => (\n              <li\n                key={tag}\n                className=\"flex items-center bg-blue-100 text-blue-800 px-3 py-1 rounded-full\"\n              >\n                {tag}\n                <button\n                  type=\"button\"\n                  onClick={() => handleDeleteTag(tag)}\n                  className=\"ml-2 text-blue-600 hover:text-blue-800 font-bold\"\n                >\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {/* Spectrum (free-text dynamic fields) */}\n      <div>\n        <label className=\"font-semibold\">Spectrum</label>\n        {spectrum.map((item, idx) => (\n          <div key={idx} className=\"flex items-center gap-2 mt-2\">\n            <input\n              type=\"text\"\n              value={item}\n              onChange={e => handleFieldChange(setSpectrum, spectrum, idx, e.target.value)}\n              className=\"flex-1 border rounded px-3 py-1\"\n              placeholder=\"Enter spectrum\"\n            />\n            <button\n              onClick={() => handleRemoveField(setSpectrum, spectrum, idx)}\n              className=\"text-red-500 hover:text-red-700 text-sm\"\n            >\n              âœ•\n            </button>\n          </div>\n        ))}\n        <button\n          onClick={() => handleAddField(setSpectrum, spectrum)}\n          className=\"mt-2 text-blue-500 hover:underline text-sm\"\n        >\n          + Add Spectrum\n        </button>\n      </div>\n\n      {/* Paper Link */}\n      <div>\n        <label className=\"font-semibold block mb-2\">Paper Link</label>\n        <input\n          type=\"text\"\n          value={paperLink}\n          onChange={e => setPaperLink(e.target.value)}\n          className=\"w-full border rounded px-3 py-2\"\n          placeholder=\"https://example.com/paper\"\n        />\n      </div>\n\n      <button\n        onClick={handleSubmit}\n        className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\n      >\n        Submit Blog\n      </button>\n\n      {/* Modal */}\n      {modal.show && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 max-w-sm w-full\">\n            <h3 className={`text-lg font-semibold ${modal.error ? 'text-red-600' : 'text-green-600'}`}>\n              {modal.message}\n            </h3>\n            <button\n              onClick={() => setModal({ ...modal, show: false })}\n              className=\"mt-4 bg-gray-800 text-white px-4 py-2 rounded hover:bg-gray-700\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogForm;\n"],"names":["predefinedTags","value","BlogForm","imageUrl","setImageUrl","useState","title","setTitle","description","setDescription","tags","setTags","spectrum","setSpectrum","paperLink","setPaperLink","modal","setModal","show","message","error","_jsxs","className","children","_jsx","type","placeholder","onChange","e","target","defaultValue","val","includes","selectedIndex","disabled","map","tag","length","onClick","handleDeleteTag","tagToRemove","filter","t","item","idx","handleFieldChange","setter","current","copy","handleRemoveField","splice","handleAddField","async","cleanedSpectrum","s","trim","payload","axios","post","URLSITE"],"sourceRoot":""}