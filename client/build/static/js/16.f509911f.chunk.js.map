{"version":3,"file":"static/js/16.f509911f.chunk.js","mappings":"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","sources":["pages/Ckeditor.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport URLSITE from '../constant';\nimport AuthContext from '../context/AuthContext';\n\nconst generateId = () => Math.random().toString(36).substr(2, 9);\n\nconst VerilogModuleEditor = () => {\n\n  const navigate = useNavigate()\n  const context = useContext(AuthContext);\n  useEffect(()=>{\n    if(!context.user) return;\n    if(context.user.email!=\"verigeektech@gmail.com\"){\n      navigate('/')\n    }\n  },[context.user])\n  const [activeTab, setActiveTab] = useState('overview');\n\n  // Module info now includes moduleType ('free' or 'paid')\n  const [moduleInfo, setModuleInfo] = useState({\n    moduleType: 'free',\n    id: '',\n    title: '',\n    description: '',\n    image: '',\n    level: '',\n    duration: '',\n    rating: '',\n    studentsCount: '',\n    completed: '',\n    totalChapters: '',\n    progress: '',\n    updatedAt: '',\n    lessons: '',\n    exercises: '',\n    students: '',\n    overview: ''\n  });\n\n  const [learnItems, setLearnItems] = useState(['']);\n  const [skills, setSkills] = useState(['']);\n  const [prerequisites, setPrerequisites] = useState(['']);\n  const [resources, setResources] = useState([{ title: '', type: 'PDF', link: '' }]);\n  const [overviewCodeSamples, setOverviewCodeSamples] = useState([{ title: '', code: '' }]);\n  const [codeExamples, setCodeExamples] = useState([\n    { id: generateId(), title: '', description: '', difficulty: '', type: '', completed: false, code: '', testbench: '' }\n  ]);\n\n  const navigator = useNavigate();\n\n  // Generic handler supports text, select, radio, checkbox\n  const handleModuleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setModuleInfo({\n      ...moduleInfo,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  const handleConvertToJSON = async () => {\n    const finalData = {\n      ...moduleInfo,\n      learnItems,\n      skills,\n      prerequisites,\n      resources,\n      overviewCodeSamples,\n      codeExamples\n    };\n\n    finalData['completed'] = false\n    console.log('ðŸ“¦ Final JSON Output:', JSON.stringify(finalData, null, 2));\n\n    try {\n      \n      const response = await axios.post(\n        `${URLSITE}/api/modules/create-module`,\n        JSON.stringify(finalData),\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      console.log(response);\n      alert('Module uploaded successfully');\n      navigator('/ckeditor2');\n    } catch (error) {\n      console.error(error);\n      const message = error?.response?.data?.error?.message || error.message;\n      alert(message);\n    }\n  };\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-6 space-y-8\">\n      {/* Access Type Selection */}\n      <div className=\"flex items-center space-x-6 mb-6\">\n        <label className=\"flex items-center space-x-2\">\n          <input\n            type=\"radio\"\n            name=\"moduleType\"\n            value=\"free\"\n            checked={moduleInfo.moduleType === 'free'}\n            onChange={handleModuleChange}\n          />\n          <span>Free</span>\n        </label>\n        <label className=\"flex items-center space-x-2\">\n          <input\n            type=\"radio\"\n            name=\"moduleType\"\n            value=\"paid\"\n            checked={moduleInfo.moduleType === 'paid'}\n            onChange={handleModuleChange}\n          />\n          <span>Paid</span>\n        </label>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex border-b mb-6\">\n        {['overview', 'code-examples'].map((tab) => (\n          <button\n            key={tab}\n            className={clsx(\n              'px-4 py-2 font-medium capitalize',\n              activeTab === tab\n                ? 'border-b-2 border-blue-600 text-blue-600'\n                : 'text-gray-600'\n            )}\n            onClick={() => setActiveTab(tab)}\n          >\n            {tab.replace('-', ' ')}\n          </button>\n        ))}\n      </div>\n\n      {/* Overview Tab */}\n      {activeTab === 'overview' && (\n        <>\n          <h1 className=\"text-3xl font-bold\">Edit Verilog Module Overview</h1>\n\n          {/* Module Info Inputs */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {Object.keys(moduleInfo).map(\n              (key, idx) =>\n                key !== 'overview' && (\n                  <input\n                    required\n                    key={idx}\n                    name={key}\n                    placeholder={key}\n                    value={moduleInfo[key]}\n                    onChange={handleModuleChange}\n                    className=\"p-2 border rounded-lg\"\n                  />\n                )\n            )}\n          </div>\n\n          {/* Overview Description */}\n          <div>\n            <h2 className=\"font-semibold mt-4\">Overview of the Module</h2>\n            <textarea\n              className=\"w-full p-2 border rounded\"\n              rows={4}\n              placeholder=\"Overview of the module\"\n              name=\"overview\"\n              value={moduleInfo.overview}\n              onChange={handleModuleChange}\n            />\n          </div>\n\n          {/* What You'll Learn */}\n          <div>\n            <h2 className=\"font-semibold mt-4\">What You'll Learn</h2>\n            {learnItems.map((item, index) => (\n              <input\n                required\n                key={index}\n                className=\"w-full p-2 my-1 border rounded\"\n                value={item}\n                onChange={(e) => {\n                  const newItems = [...learnItems];\n                  newItems[index] = e.target.value;\n                  setLearnItems(newItems);\n                }}\n              />\n            ))}\n            <button\n              className=\"mt-2 text-blue-600\"\n              onClick={() => setLearnItems([...learnItems, ''])}\n            >\n              + Add Item\n            </button>\n          </div>\n\n          {/* Skills You'll Gain */}\n          <div>\n            <h2 className=\"font-semibold mt-4\">Skills You'll Gain</h2>\n            {skills.map((skill, index) => (\n              <input\n                required\n                key={index}\n                className=\"w-full p-2 my-1 border rounded\"\n                value={skill}\n                onChange={(e) => {\n                  const newSkills = [...skills];\n                  newSkills[index] = e.target.value;\n                  setSkills(newSkills);\n                }}\n              />\n            ))}\n            <button\n              className=\"mt-2 text-blue-600\"\n              onClick={() => setSkills([...skills, ''])}\n            >\n              + Add Skill\n            </button>\n          </div>\n\n          {/* Prerequisites */}\n          <div>\n            <h2 className=\"font-semibold mt-4\">Prerequisites</h2>\n            {prerequisites.map((item, index) => (\n              <input\n                required\n                key={index}\n                className=\"w-full p-2 my-1 border rounded\"\n                value={item}\n                onChange={(e) => {\n                  const newPre = [...prerequisites];\n                  newPre[index] = e.target.value;\n                  setPrerequisites(newPre);\n                }}\n              />\n            ))}\n            <button\n              className=\"mt-2 text-blue-600\"\n              onClick={() => setPrerequisites([...prerequisites, ''])}\n            >\n              + Add Prerequisite\n            </button>\n          </div>\n\n          {/* Overview Code Samples */}\n          <div>\n            <h2 className=\"font-semibold mt-4\">Overview Code Samples</h2>\n            {overviewCodeSamples.map((sample, index) => (\n              <div key={index} className=\"space-y-2 mb-4\">\n                <input\n                  className=\"w-full p-2 border rounded\"\n                  placeholder=\"Title\"\n                  value={sample.title}\n                  onChange={(e) => {\n                    const newSamples = [...overviewCodeSamples];\n                    newSamples[index].title = e.target.value;\n                    setOverviewCodeSamples(newSamples);\n                  }}\n                />\n                <textarea\n                  className=\"w-full p-2 border rounded font-mono\"\n                  placeholder=\"Code\"\n                  rows={4}\n                  value={sample.code}\n                  onChange={(e) => {\n                    const newSamples = [...overviewCodeSamples];\n                    newSamples[index].code = e.target.value;\n                    setOverviewCodeSamples(newSamples);\n                  }}\n                />\n              </div>\n            ))}\n            <button\n              className=\"text-blue-600\"\n              onClick={() => setOverviewCodeSamples([...overviewCodeSamples, { title: '', code: '' }])}\n            >\n              + Add Code Sample\n            </button>\n          </div>\n\n          {/* Additional Resources */}\n          <div>\n            <h2 className=\"font-semibold mt-4\">Additional Resources</h2>\n            {resources.map((res, index) => (\n              <div key={index} className=\"grid grid-cols-1 md:grid-cols-3 gap-3 mb-3\">\n                <input\n                  className=\"p-2 border rounded\"\n                  placeholder=\"Title\"\n                  value={res.title}\n                  onChange={(e) => {\n                    const newRes = [...resources];\n                    newRes[index].title = e.target.value;\n                    setResources(newRes);\n                  }}\n                />\n                <select\n                  className=\"p-2 border rounded\"\n                  value={res.type}\n                  onChange={(e) => {\n                    const newRes = [...resources];\n                    newRes[index].type = e.target.value;\n                    setResources(newRes);\n                  }}\n                >\n                  <option value=\"PDF\">PDF</option>\n                  <option value=\"Video\">Video</option>\n                  <option value=\"Image\">Image</option>\n                </select>\n                <input\n                  required\n                  className=\"p-2 border rounded\"\n                  placeholder=\"Link\"\n                  value={res.link}\n                  onChange={(e) => {\n                    const newRes = [...resources];\n                    newRes[index].link = e.target.value;\n                    setResources(newRes);\n                  }}\n                />\n              </div>\n            ))}\n            <button\n              className=\"text-blue-600\"\n              onClick={() => setResources([...resources, { title: '', type: 'PDF', link: '' }])}\n            >\n              + Add Resource\n            </button>\n          </div>\n\n          <button\n            className=\"mt-6 px-4 py-2 bg-blue-600 text-white rounded-lg\"\n            onClick={handleConvertToJSON}\n          >\n            Convert to JSON\n          </button>\n        </>\n      )}\n\n      {/* Code Examples Tab */}\n      {activeTab === 'code-examples' && (\n        <>\n          <h1 className=\"text-3xl font-bold\">Code Examples</h1>\n          {codeExamples.map((ex, index) => (\n            <div key={index} className=\"space-y-3 mb-6 border p-4 rounded-lg\">\n              <input\n                required\n                className=\"w-full p-2 border rounded\"\n                placeholder=\"ID\"\n                value={ex.id}\n                onChange={(e) => {\n                  const updated = [...codeExamples];\n                  updated[index].id = e.target.value;\n                  setCodeExamples(updated);\n                }}\n              />\n              <input\n                required\n                className=\"w-full p-2 border rounded\"\n                placeholder=\"Title\"\n                value={ex.title}\n                onChange={(e) => {\n                  const updated = [...codeExamples];\n                  updated[index].title = e.target.value;\n                  setCodeExamples(updated);\n                }}\n              />\n              <textarea\n                className=\"w-full p-2 border rounded\"\n                placeholder=\"Description\"\n                rows={2}\n                value={ex.description}\n                onChange={(e) => {\n                  const updated = [...codeExamples];\n                  updated[index].description = e.target.value;\n                  setCodeExamples(updated);\n                }}\n              />\n              <input\n                required\n                className=\"w-full p-2 border rounded\"\n                placeholder=\"Difficulty\"\n                value={ex.difficulty}\n                onChange={(e) => {\n                  const updated = [...codeExamples];\n                  updated[index].difficulty = e.target.value;\n                  setCodeExamples(updated);\n                }}\n              />\n              <input\n                required\n                className=\"w-full p-2 border rounded\"\n                placeholder=\"Type\"\n                value={ex.type}\n                onChange={(e) => {\n                  const updated = [...codeExamples];\n                  updated[index].type = e.target.value;\n                  setCodeExamples(updated);\n                }}\n              />\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  required\n                  type=\"checkbox\"\n                  checked={ex.completed}\n                  onChange={(e) => {\n                    const updated = [...codeExamples];\n                    updated[index].completed = e.target.checked;\n                    setCodeExamples(updated);\n                  }}\n                />\n                <span>Completed</span>\n              </label>\n\n              {/* Design Code */}\n              <h3 className=\"font-semibold mt-4\">Design Code</h3>\n              <textarea\n                className=\"w-full p-2 border rounded font-mono\"\n                placeholder=\"Design Code\"\n                rows={6}\n                value={ex.code}\n                onChange={(e) => {\n                  const updated = [...codeExamples];\n                  updated[index].code = e.target.value;\n                  setCodeExamples(updated);\n                }}\n              />\n\n              {/* Testbench Code */}\n              <h3 className=\"font-semibold mt-4\">Testbench Code</h3>\n              <textarea\n                className=\"w-full p-2 border rounded font-mono\"\n                placeholder=\"Testbench Code\"\n                rows={6}\n                value={ex.testbench}\n                onChange={(e) => {\n                  const updated = [...codeExamples];\n                  updated[index].testbench = e.target.value;\n                  setCodeExamples(updated);\n                }}\n              />\n            </div>\n          ))}\n          <button\n            className=\"text-blue-600\"\n            onClick={() =>\n              setCodeExamples([\n                ...codeExamples,\n                { id: generateId(), title: '', description: '', difficulty: '', type: '', completed: false, code: '', testbench: '' }\n              ])\n            }\n          >\n            + Add Code Example\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default VerilogModuleEditor;\n"],"names":["generateId","Math","random","toString","substr","VerilogModuleEditor","navigate","useNavigate","context","useContext","AuthContext","useEffect","user","email","activeTab","setActiveTab","useState","moduleInfo","setModuleInfo","moduleType","id","title","description","image","level","duration","rating","studentsCount","completed","totalChapters","progress","updatedAt","lessons","exercises","students","overview","learnItems","setLearnItems","skills","setSkills","prerequisites","setPrerequisites","resources","setResources","type","link","overviewCodeSamples","setOverviewCodeSamples","code","codeExamples","setCodeExamples","difficulty","testbench","navigator","handleModuleChange","e","name","value","checked","target","_jsxs","className","children","_jsx","onChange","map","tab","clsx","onClick","replace","_Fragment","Object","keys","key","idx","required","placeholder","rows","item","index","newItems","skill","newSkills","newPre","sample","newSamples","res","newRes","async","finalData","console","log","JSON","stringify","response","axios","post","URLSITE","headers","alert","error","_error$response","_error$response$data","_error$response$data$","message","data","ex","updated"],"sourceRoot":""}