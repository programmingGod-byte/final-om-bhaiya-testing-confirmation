{"version":3,"file":"static/js/8238.f1a88771.chunk.js","mappings":"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","sources":["pages/CustomEditorForEditing.jsx","pages/ChapterView.jsx","utils/progressTracker.js","components/ChapterContent.jsx"],"sourcesContent":["import React, { useRef, useState, useCallback } from 'react';\n// Add this import at the top with other imports\nimport 'highlight.js/styles/github-dark.css'; // or any other theme\nimport { EditorContent, useEditor } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport ImageExtension from '@tiptap/extension-image';\nimport CodeBlockLowlight from '@tiptap/extension-code-block-lowlight';\nimport TextAlign from '@tiptap/extension-text-align';\nimport UnderlineExtension from '@tiptap/extension-underline';\nimport TextStyle from '@tiptap/extension-text-style';\nimport Color from '@tiptap/extension-color';\nimport Highlight from '@tiptap/extension-highlight';\nimport Table from '@tiptap/extension-table';\nimport TableRow from '@tiptap/extension-table-row';\nimport TableHeader from '@tiptap/extension-table-header';\nimport TableCell from '@tiptap/extension-table-cell';\nimport { createLowlight } from 'lowlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport python from 'highlight.js/lib/languages/python';\nimport css from 'highlight.js/lib/languages/css';\nimport html from 'highlight.js/lib/languages/xml';\nimport json from 'highlight.js/lib/languages/json';\nimport bash from 'highlight.js/lib/languages/bash';\nimport sql from 'highlight.js/lib/languages/sql';\nimport java from 'highlight.js/lib/languages/java';\nimport cpp from 'highlight.js/lib/languages/cpp';\nimport php from 'highlight.js/lib/languages/php';\n\nimport {\n    Bold,\n    Italic,\n    Underline,\n    Strikethrough,\n    Code,\n    Image,\n    AlignLeft,\n    AlignCenter,\n    AlignRight,\n    List,\n    ListOrdered,\n    Quote,\n    Minus,\n    Undo,\n    Redo,\n    Save,\n    Download,\n    Type,\n    Upload,\n    Copy,\n    FileText,\n    Maximize2,\n    Minimize2,\n    RotateCcw,\n    Move,\n    Table as TableIcon,\n    Plus,\n    Trash2,\n    Grid3x3,\n    MoreVertical,\n    MoreHorizontal\n} from 'lucide-react';\n\n// Create lowlight instance with extensive language support\nconst lowlight = createLowlight();\nlowlight.register('javascript', javascript);\nlowlight.register('python', python);\nlowlight.register('css', css);\nlowlight.register('html', html);\nlowlight.register('json', json);\nlowlight.register('bash', bash);\nlowlight.register('sql', sql);\nlowlight.register('java', java);\nlowlight.register('cpp', cpp);\nlowlight.register('php', php);\n\n// Add this import at the top\nimport { useEffect } from 'react';\n\n// Custom Image Extension with resize and alignment\nconst CustomImageExtension = ImageExtension.extend({\n    addAttributes() {\n        return {\n            ...this.parent?.(),\n            width: {\n                default: null,\n                parseHTML: element => element.getAttribute('width'),\n                renderHTML: attributes => {\n                    if (!attributes.width) return {}\n                    return { width: attributes.width }\n                },\n            },\n            height: {\n                default: null,\n                parseHTML: element => element.getAttribute('height'),\n                renderHTML: attributes => {\n                    if (!attributes.height) return {}\n                    return { height: attributes.height }\n                },\n            },\n            align: {\n                default: 'left',\n                parseHTML: element => element.style.float || 'left',\n                renderHTML: attributes => {\n                    const alignMap = {\n                        'left': 'left',\n                        'center': 'none',\n                        'right': 'right'\n                    };\n                    return {\n                        style: `float: ${alignMap[attributes.align] || 'left'}; margin: ${attributes.align === 'center' ? '0 auto' : '10px'}; display: ${attributes.align === 'center' ? 'block' : 'inline-block'};`\n                    }\n                },\n            },\n        }\n    },\n});\n\n// Custom Table Extension with enhanced features\nconst CustomTable = Table.extend({\n    addAttributes() {\n        return {\n            ...this.parent?.(),\n            alignment: {\n                default: 'left',\n                parseHTML: element => element.style.marginLeft === 'auto' && element.style.marginRight === 'auto' ? 'center' :\n                    element.style.marginLeft === 'auto' ? 'right' : 'left',\n                renderHTML: attributes => {\n                    const alignment = attributes.alignment || 'left';\n                    const styles = {\n                        left: 'margin-left: 0; margin-right: auto;',\n                        center: 'margin-left: auto; margin-right: auto;',\n                        right: 'margin-left: auto; margin-right: 0;'\n                    };\n                    return {\n                        style: `${styles[alignment]} border-collapse: collapse; width: 100%; border: 2px solid #8b5cf6;`\n                    };\n                },\n            },\n        }\n    },\n    // Remove the renderHTML method completely\n});\n\nconst RichTextEditorForEditing = ({ editorContent,setEditorContent,customEditContent = null, setCustomEditContent = null }) => {\n    const fileInputRef = useRef();\n    const [fontSize, setFontSize] = useState(16);\n    const [showUploadModal, setShowUploadModal] = useState(false);\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const [showImageModal, setShowImageModal] = useState(false);\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [showTableModal, setShowTableModal] = useState(false);\n    const [tableSettings, setTableSettings] = useState({\n        rows: 3,\n        cols: 3,\n        withHeaderRow: true,\n        alignment: 'left'\n    });\n    // In your parent component or at the top of RichTextEditor\n    \n\n    const editor = useEditor({\n        extensions: [\n            StarterKit,\n            CustomImageExtension.configure({\n                HTMLAttributes: {\n                    class: 'max-w-full h-auto rounded-lg shadow-lg border border-purple-200 cursor-pointer',\n                },\n            }),\n            CodeBlockLowlight.configure({\n                lowlight,\n                HTMLAttributes: {\n                    class: 'bg-gray-900 text-gray-100 p-4 rounded-lg text-sm font-mono overflow-x-auto border border-purple-300 shadow-lg hljs',\n                },\n            }),\n            TextAlign.configure({\n                types: ['heading', 'paragraph'],\n            }),\n            UnderlineExtension,\n            TextStyle,\n            Color,\n            Highlight.configure({\n                multicolor: true,\n            }),\n            CustomTable.configure({\n                resizable: true,\n                HTMLAttributes: {\n                    class: 'table-custom border-collapse border-2 border-purple-500 w-full',\n                },\n            }),\n            TableRow.configure({\n                HTMLAttributes: {\n                    class: 'table-row',\n                },\n            }),\n            TableHeader.configure({\n                HTMLAttributes: {\n                    class: 'table-header bg-purple-100 border border-purple-400 p-2 font-bold text-purple-800',\n                },\n            }),\n            TableCell.configure({\n                HTMLAttributes: {\n                    class: 'table-cell border border-purple-300 p-2',\n                },\n            }),\n        ],\n        content: customEditContent == null ? `<p>Start typing...</p>` : customEditContent,\n        editorProps: {\n            attributes: {\n                class: 'prose prose-purple max-w-none focus:outline-none min-h-full p-6 text-gray-800',\n                style: `min-height: calc(100vh - 200px); font-size: ${fontSize}px;`,\n            },\n            handleClickOn: (view, pos, node, nodePos, event) => {\n                if (node.type.name === 'image') {\n                    const { src, width, height, align } = node.attrs;\n                    setSelectedImage({\n                        src,\n                        width: width || '300px',\n                        height: height || 'auto',\n                        align: align || 'left',\n                        pos: nodePos\n                    });\n                    setShowImageModal(true);\n                    return true;\n                }\n                return false;\n            },\n        },\n\n        // Hook into editor changes here\n        onUpdate: ({ editor }) => {\n            console.log(\"chages occured\")\n            const html = editor.getHTML();\n            console.log(html)\n            setEditorContent(html);\n        },\n        onCreate: ({ editor }) => {\n            // Set initial content\n            const html = editor.getHTML();\n            setEditorContent(html);\n        },\n    });\n\n    // Add this useEffect after your editor definition\n    useEffect(() => {\n        if (editor) {\n            const handleUpdate = () => {\n                // Delay to ensure DOM is updated\n                setTimeout(() => {\n                    const previewEl = document.querySelector('.preview-content');\n                    if (previewEl && window.hljs) {\n                        const codeBlocks = previewEl.querySelectorAll('pre code:not(.hljs)');\n                        codeBlocks.forEach(block => {\n                            window.hljs.highlightElement(block);\n                        });\n                    }\n                }, 100);\n            };\n\n            editor.on('update', handleUpdate);\n            handleUpdate(); // Initial highlight\n\n            return () => {\n                editor.off('update', handleUpdate);\n            };\n        }\n    }, [editor]);\n\n    const addImageFromUrl = useCallback(() => {\n        const url = window.prompt('Enter image URL');\n        if (url && editor) {\n            editor.chain().focus().setImage({\n                src: url,\n                width: '300px',\n                height: 'auto',\n                align: 'left'\n            }).run();\n        }\n    }, [editor]);\n\n    const addImageFromFile = useCallback((event) => {\n        const file = event.target.files[0];\n        if (!file || !editor) return;\n\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            editor.chain().focus().setImage({\n                src: reader.result,\n                width: '300px',\n                height: 'auto',\n                align: 'left'\n            }).run();\n        };\n        reader.readAsDataURL(file);\n    }, [editor]);\n\n    const updateImageAttributes = useCallback((attributes) => {\n        if (!editor || !selectedImage) return;\n\n        // Find the image node and update it\n        const { state } = editor;\n        const { doc } = state;\n\n        doc.descendants((node, pos) => {\n            if (node.type.name === 'image' && node.attrs.src === selectedImage.src) {\n                editor.chain()\n                    .focus()\n                    .setNodeSelection(pos)\n                    .updateAttributes('image', attributes)\n                    .run();\n                return false; // Stop searching\n            }\n        });\n\n        setSelectedImage(prev => ({ ...prev, ...attributes }));\n    }, [editor, selectedImage]);\n\n\n    // Table Functions\n    const insertTable = useCallback(() => {\n        if (!editor) return;\n\n        const { rows, cols, withHeaderRow, alignment } = tableSettings;\n\n        editor.chain().focus().insertTable({\n            rows,\n            cols,\n            withHeaderRow\n        }).run();\n\n        // Update table attributes after insertion\n        setTimeout(() => {\n            editor.chain().focus().updateAttributes('table', { alignment }).run();\n        }, 100);\n\n        setShowTableModal(false);\n    }, [editor, tableSettings]);\n\n    const addTableRow = useCallback(() => {\n        if (!editor) return;\n        editor.chain().focus().addRowAfter().run();\n    }, [editor]);\n\n    const deleteTableRow = useCallback(() => {\n        if (!editor) return;\n        editor.chain().focus().deleteRow().run();\n    }, [editor]);\n\n    const addTableColumn = useCallback(() => {\n        if (!editor) return;\n        editor.chain().focus().addColumnAfter().run();\n    }, [editor]);\n\n    const deleteTableColumn = useCallback(() => {\n        if (!editor) return;\n        editor.chain().focus().deleteColumn().run();\n    }, [editor]);\n\n    const deleteTable = useCallback(() => {\n        if (!editor) return;\n        editor.chain().focus().deleteTable().run();\n    }, [editor]);\n\n    const toggleHeaderRow = useCallback(() => {\n        if (!editor) return;\n        editor.chain().focus().toggleHeaderRow().run();\n    }, [editor]);\n\n    const mergeTableCells = useCallback(() => {\n        if (!editor) return;\n        editor.chain().focus().mergeCells().run();\n    }, [editor]);\n\n    const splitTableCell = useCallback(() => {\n        if (!editor) return;\n        editor.chain().focus().splitCell().run();\n    }, [editor]);\n\n    const saveContent = useCallback(() => {\n        if (!editor) return;\n        const content = editor.getHTML();\n        // uploadFunction(content);\n        console.log('Saving content:', content);\n    }, [editor]);\n\n    const exportAsText = useCallback(() => {\n        if (!editor) return;\n        const content = editor.getText();\n        const blob = new Blob([content], { type: 'text/plain' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'purple-document.txt';\n        a.click();\n        URL.revokeObjectURL(url);\n    }, [editor]);\n\n    const uploadContent = useCallback(() => {\n        if (!editor) return;\n        setShowUploadModal(true);\n    }, [editor]);\n\n    const copyToClipboard = useCallback(async () => {\n        if (!editor) return;\n        const content = editor.getHTML();\n        try {\n            await navigator.clipboard.writeText(content);\n            alert('HTML content copied to clipboard!');\n        } catch (err) {\n            console.error('Failed to copy: ', err);\n            const textArea = document.createElement('textarea');\n            textArea.value = content;\n            document.body.appendChild(textArea);\n            textArea.select();\n            document.execCommand('copy');\n            document.body.removeChild(textArea);\n            alert('HTML content copied to clipboard!');\n        }\n    }, [editor]);\n\n    const changeFontSize = useCallback((size) => {\n        setFontSize(size);\n        const editorEl = document.querySelector('.ProseMirror');\n        if (editorEl) {\n            editorEl.style.fontSize = `${size}px`;\n        }\n    }, []);\n\n    if (!editor) {\n        return (\n            <div\n                className=\"flex items-center justify-center h-screen bg-gradient-to-br from-purple-900 via-purple-800 to-indigo-900\">\n                <div className=\"text-white text-xl\">Loading Enhanced Split-Screen Editor...</div>\n            </div>\n        );\n    }\n\n    const ToolbarButton = ({ onClick, isActive = false, disabled = false, children, title }) => (\n        <button\n            onClick={onClick}\n            disabled={disabled}\n            title={title}\n            className={`\n        p-1.5 rounded-md transition-all duration-200 text-sm\n        ${isActive ? 'bg-purple-600 text-white shadow-md scale-105' : 'text-purple-600 hover:bg-purple-100 hover:text-purple-700'}\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'hover:scale-105 hover:shadow-sm'}\n      `}\n        >\n            {children}\n        </button>\n    );\n\n    return (\n        <div className=\"h-screen bg-gradient-to-br from-purple-50 via-white to-purple-50 flex flex-col relative z-10\">\n            {/* Header */}\n            <div className=\"bg-gradient-to-r from-purple-600 via-purple-700 to-indigo-600 text-white p-3 shadow-lg\">\n                <div className=\"flex justify-between items-center\">\n                    <div>\n                        <h1 className=\"text-2xl font-bold\">Enhanced Split-Screen Rich Text Editor with Tables</h1>\n                        <p className=\"text-purple-100 text-sm\">Editor on the left, live preview on the right with syntax highlighting and table support</p>\n                    </div>\n                    <button\n                        onClick={() => setIsFullScreen(!isFullScreen)}\n                        className=\"p-2 bg-white bg-opacity-20 rounded-lg hover:bg-opacity-30 transition-colors\"\n                        title={isFullScreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}\n                    >\n                        {isFullScreen ? <Minimize2 size={20} /> : <Maximize2 size={20} />}\n                    </button>\n                </div>\n            </div>\n\n            {/* Toolbar */}\n            <div\n                className=\"sticky top-0 z-40 border-b border-purple-200 bg-gradient-to-r from-purple-50 to-indigo-50 p-3 shadow-sm backdrop-blur-sm bg-opacity-95\">\n                <div className=\"flex flex-wrap gap-1 items-center\">\n                    {/* Text Formatting */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleBold().run()}\n                            isActive={editor.isActive('bold')}\n                            title=\"Bold\"\n                        >\n                            <Bold size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleItalic().run()}\n                            isActive={editor.isActive('italic')}\n                            title=\"Italic\"\n                        >\n                            <Italic size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleUnderline().run()}\n                            isActive={editor.isActive('underline')}\n                            title=\"Underline\"\n                        >\n                            <Underline size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleStrike().run()}\n                            isActive={editor.isActive('strike')}\n                            title=\"Strikethrough\"\n                        >\n                            <Strikethrough size={14} />\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Alignment */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().setTextAlign('left').run()}\n                            isActive={editor.isActive({ textAlign: 'left' })}\n                            title=\"Align Left\"\n                        >\n                            <AlignLeft size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().setTextAlign('center').run()}\n                            isActive={editor.isActive({ textAlign: 'center' })}\n                            title=\"Align Center\"\n                        >\n                            <AlignCenter size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().setTextAlign('right').run()}\n                            isActive={editor.isActive({ textAlign: 'right' })}\n                            title=\"Align Right\"\n                        >\n                            <AlignRight size={14} />\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Lists */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleBulletList().run()}\n                            isActive={editor.isActive('bulletList')}\n                            title=\"Bullet List\"\n                        >\n                            <List size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleOrderedList().run()}\n                            isActive={editor.isActive('orderedList')}\n                            title=\"Numbered List\"\n                        >\n                            <ListOrdered size={14} />\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Other Elements */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleBlockquote().run()}\n                            isActive={editor.isActive('blockquote')}\n                            title=\"Quote\"\n                        >\n                            <Quote size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().toggleCodeBlock().run()}\n                            isActive={editor.isActive('codeBlock')}\n                            title=\"Code Block\"\n                        >\n                            <Code size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().setHorizontalRule().run()}\n                            title=\"Horizontal Rule\"\n                        >\n                            <Minus size={14} />\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Table Controls */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => setShowTableModal(true)}\n                            title=\"Insert Table\"\n                        >\n                            <TableIcon size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={addTableRow}\n                            disabled={!editor.can().addRowAfter()}\n                            title=\"Add Row\"\n                        >\n                            <div className=\"flex items-center\">\n                                <Plus size={10} />\n                                <MoreHorizontal size={10} />\n                            </div>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={addTableColumn}\n                            disabled={!editor.can().addColumnAfter()}\n                            title=\"Add Column\"\n                        >\n                            <div className=\"flex items-center\">\n                                <Plus size={10} />\n                                <MoreVertical size={10} />\n                            </div>\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={deleteTable}\n                            disabled={!editor.can().deleteTable()}\n                            title=\"Delete Table\"\n                        >\n                            <Trash2 size={14} />\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Colors */}\n                    <div\n                        className=\"flex items-center gap-1.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <input\n                            type=\"color\"\n                            onChange={(e) => editor.chain().focus().setColor(e.target.value).run()}\n                            className=\"w-6 h-6 rounded cursor-pointer border border-purple-300 hover:border-purple-500\"\n                            title=\"Text Color\"\n                            defaultValue=\"#8b5cf6\"\n                        />\n                        <input\n                            type=\"color\"\n                            onChange={(e) => editor.chain().focus().toggleHighlight({ color: e.target.value }).run()}\n                            className=\"w-6 h-6 rounded cursor-pointer border border-purple-300 hover:border-purple-500\"\n                            title=\"Highlight Color\"\n                            defaultValue=\"#e879f9\"\n                        />\n                    </div>\n\n                    {/* Undo/Redo */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().undo().run()}\n                            disabled={!editor.can().undo()}\n                            title=\"Undo\"\n                        >\n                            <Undo size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => editor.chain().focus().redo().run()}\n                            disabled={!editor.can().redo()}\n                            title=\"Redo\"\n                        >\n                            <Redo size={14} />\n                        </ToolbarButton>\n                    </div>\n                </div>\n\n                {/* Second Row */}\n                <div className=\"flex flex-wrap gap-1 items-center mt-2 pt-2 border-t border-purple-200\">\n                    {/* Font Size */}\n                    <div\n                        className=\"flex items-center gap-1.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <Type size={14} className=\"text-purple-600\" />\n                        <select\n                            value={fontSize}\n                            onChange={(e) => changeFontSize(Number(e.target.value))}\n                            className=\"px-2 py-1 border border-purple-300 rounded text-xs focus:border-purple-500 focus:ring-1 focus:ring-purple-200\"\n                        >\n                            <option value={12}>12px</option>\n                            <option value={14}>14px</option>\n                            <option value={16}>16px</option>\n                            <option value={18}>18px</option>\n                            <option value={20}>20px</option>\n                            <option value={24}>24px</option>\n                            <option value={32}>32px</option>\n                        </select>\n                    </div>\n\n                    {/* Headings */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        {[1, 2, 3].map((level) => (\n                            <ToolbarButton\n                                key={level}\n                                onClick={() => editor.chain().focus().toggleHeading({ level }).run()}\n                                isActive={editor.isActive('heading', { level })}\n                                title={`Heading ${level}`}\n                            >\n                                <span className=\"font-bold text-xs\">H{level}</span>\n                            </ToolbarButton>\n                        ))}\n                    </div>\n\n                    {/* Table Row Controls (when in table) */}\n                    {editor.isActive('table') && (\n                        <div\n                            className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                            <ToolbarButton\n                                onClick={deleteTableRow}\n                                disabled={!editor.can().deleteRow()}\n                                title=\"Delete Row\"\n                            >\n                                <div className=\"flex items-center text-red-600\">\n                                    <Trash2 size={10} />\n                                    <MoreHorizontal size={10} />\n                                </div>\n                            </ToolbarButton>\n                            <ToolbarButton\n                                onClick={deleteTableColumn}\n                                disabled={!editor.can().deleteColumn()}\n                                title=\"Delete Column\"\n                            >\n                                <div className=\"flex items-center text-red-600\">\n                                    <Trash2 size={10} />\n                                    <MoreVertical size={10} />\n                                </div>\n                            </ToolbarButton>\n                            <ToolbarButton\n                                onClick={toggleHeaderRow}\n                                title=\"Toggle Header Row\"\n                            >\n                                <Grid3x3 size={14} />\n                            </ToolbarButton>\n                            <ToolbarButton\n                                onClick={mergeTableCells}\n                                disabled={!editor.can().mergeCells()}\n                                title=\"Merge Cells\"\n                            >\n                                <span className=\"text-xs font-bold\">M</span>\n                            </ToolbarButton>\n                            <ToolbarButton\n                                onClick={splitTableCell}\n                                disabled={!editor.can().splitCell()}\n                                title=\"Split Cell\"\n                            >\n                                <span className=\"text-xs font-bold\">S</span>\n                            </ToolbarButton>\n                        </div>\n                    )}\n\n                    {/* Image */}\n                    <div\n                        className=\"flex items-center gap-0.5 mr-3 p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton onClick={addImageFromUrl} title=\"Add Image from URL\">\n                            <Image size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton\n                            onClick={() => fileInputRef.current?.click()}\n                            title=\"Upload Image\"\n                        >\n                            <div className=\"flex items-center gap-0.5\">\n                                <Image size={14} />\n                                <span className=\"text-xs\">+</span>\n                            </div>\n                        </ToolbarButton>\n                    </div>\n\n                    {/* Actions */}\n                    <div\n                        className=\"flex items-center gap-0.5 ml-auto p-1.5 bg-white rounded-md shadow-sm border border-purple-200\">\n                        <ToolbarButton onClick={uploadContent} title=\"View HTML Source\">\n                            <Upload size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton onClick={copyToClipboard} title=\"Copy HTML to Clipboard\">\n                            <Copy size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton onClick={saveContent} title=\"Save as HTML\">\n                            <Save size={14} />\n                        </ToolbarButton>\n                        <ToolbarButton onClick={exportAsText} title=\"Export as Text\">\n                            <Download size={14} />\n                        </ToolbarButton>\n                    </div>\n                </div>\n            </div>\n\n            {/* Split Screen Content */}\n            <div className=\"flex-1 flex\">\n                {/* Editor Side (Left) */}\n                <div\n                    className={`${isFullScreen ? 'w-full' : 'w-1/2'} bg-white border-r-2 border-purple-200 flex flex-col`}>\n                    <div className=\"bg-purple-100 px-3 py-2 border-b border-purple-200\">\n                        <h3 className=\"text-xs font-semibold text-purple-700 flex items-center gap-1\">\n                            <FileText size={12} />\n                            Editor\n                        </h3>\n                    </div>\n                    <div className=\"flex-1 overflow-auto\">\n                        <EditorContent editor={editor} />\n                    </div>\n                </div>\n\n                {/* Preview Side (Right) */}\n                {!isFullScreen && (\n                    <div className=\"w-1/2 bg-gradient-to-br from-purple-50 to-indigo-50 flex flex-col\">\n                        <div className=\"bg-purple-100 px-3 py-2 border-b border-purple-200\">\n                            <h3 className=\"text-xs font-semibold text-purple-700 flex items-center gap-1\">\n                                <Move size={12} />\n                                Live Preview\n                            </h3>\n                        </div>\n                        <div className=\"flex-1 overflow-auto p-6\">\n                            <div\n                                className=\"preview-content prose prose-purple max-w-none\"\n                                style={{ fontSize: `${fontSize}px` }}\n                                dangerouslySetInnerHTML={{ __html: editorContent }}\n                            />\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {/* File Input (Hidden) */}\n            <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={addImageFromFile}\n                className=\"hidden\"\n            />\n\n            {/* Upload Modal */}\n            {showUploadModal && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                    <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full m-4 max-h-96 overflow-auto\">\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h3 className=\"text-lg font-bold text-purple-700\">HTML Source</h3>\n                            <button\n                                onClick={() => setShowUploadModal(false)}\n                                className=\"text-gray-500 hover:text-gray-700\"\n                            >\n                                ✕\n                            </button>\n                        </div>\n                        <pre className=\"bg-gray-100 p-4 rounded-lg text-sm overflow-auto max-h-64\">\n                            <code>{editor.getHTML()}</code>\n                        </pre>\n                        <div className=\"mt-4 flex gap-2\">\n                            <button\n                                onClick={copyToClipboard}\n                                className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700\"\n                            >\n                                Copy to Clipboard\n                            </button>\n                            <button\n                                onClick={() => setShowUploadModal(false)}\n                                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Image Modal */}\n            {showImageModal && selectedImage && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                    <div className=\"bg-white rounded-lg p-6 max-w-md w-full m-4\">\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h3 className=\"text-lg font-bold text-purple-700\">Image Settings</h3>\n                            <button\n                                onClick={() => setShowImageModal(false)}\n                                className=\"text-gray-500 hover:text-gray-700\"\n                            >\n                                ✕\n                            </button>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Width (px)\n                                </label>\n                                <input\n                                    type=\"number\"\n                                    value={parseInt(selectedImage.width) || 300}\n                                    onChange={(e) => updateImageAttributes({ width: `${e.target.value}px` })}\n                                    className=\"w-full px-3 py-2 border border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                />\n                            </div>\n\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Alignment\n                                </label>\n                                <select\n                                    value={selectedImage.align || 'left'}\n                                    onChange={(e) => updateImageAttributes({ align: e.target.value })}\n                                    className=\"w-full px-3 py-2 border border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                >\n                                    <option value=\"left\">Left</option>\n                                    <option value=\"center\">Center</option>\n                                    <option value=\"right\">Right</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-6 flex gap-2\">\n                            <button\n                                onClick={() => setShowImageModal(false)}\n                                className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700\"\n                            >\n                                Apply Changes\n                            </button>\n                            <button\n                                onClick={() => {\n                                    editor.chain().focus().deleteRange({ from: selectedImage.pos, to: selectedImage.pos + 1 }).run();\n                                    setShowImageModal(false);\n                                }}\n                                className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\n                            >\n                                Delete Image\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Table Modal */}\n            {showTableModal && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                    <div className=\"bg-white rounded-lg p-6 max-w-md w-full m-4\">\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h3 className=\"text-lg font-bold text-purple-700\">Insert Table</h3>\n                            <button\n                                onClick={() => setShowTableModal(false)}\n                                className=\"text-gray-500 hover:text-gray-700\"\n                            >\n                                ✕\n                            </button>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                            <div className=\"grid grid-cols-2 gap-4\">\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        Rows\n                                    </label>\n                                    <input\n                                        type=\"number\"\n                                        min=\"1\"\n                                        max=\"10\"\n                                        value={tableSettings.rows}\n                                        onChange={(e) => setTableSettings(prev => ({ ...prev, rows: parseInt(e.target.value) }))}\n                                        className=\"w-full px-3 py-2 border border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                    />\n                                </div>\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        Columns\n                                    </label>\n                                    <input\n                                        type=\"number\"\n                                        min=\"1\"\n                                        max=\"10\"\n                                        value={tableSettings.cols}\n                                        onChange={(e) => setTableSettings(prev => ({ ...prev, cols: parseInt(e.target.value) }))}\n                                        className=\"w-full px-3 py-2 border border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                    />\n                                </div>\n                            </div>\n\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Table Caption (Optional)\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    value={tableSettings.caption}\n                                    onChange={(e) => setTableSettings(prev => ({ ...prev, caption: e.target.value }))}\n                                    placeholder=\"Enter table caption...\"\n                                    className=\"w-full px-3 py-2 border border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                />\n                            </div>\n\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Table Alignment\n                                </label>\n                                <select\n                                    value={tableSettings.alignment}\n                                    onChange={(e) => setTableSettings(prev => ({ ...prev, alignment: e.target.value }))}\n                                    className=\"w-full px-3 py-2 border border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                >\n                                    <option value=\"left\">Left</option>\n                                    <option value=\"center\">Center</option>\n                                    <option value=\"right\">Right</option>\n                                </select>\n                            </div>\n\n                            <div className=\"flex items-center\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"headerRow\"\n                                    checked={tableSettings.withHeaderRow}\n                                    onChange={(e) => setTableSettings(prev => ({ ...prev, withHeaderRow: e.target.checked }))}\n                                    className=\"h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\n                                />\n                                <label htmlFor=\"headerRow\" className=\"ml-2 block text-sm text-gray-700\">\n                                    Include header row\n                                </label>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-6 flex gap-2\">\n                            <button\n                                onClick={insertTable}\n                                className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700\"\n                            >\n                                Insert Table\n                            </button>\n                            <button\n                                onClick={() => setShowTableModal(false)}\n                                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                            >\n                                Cancel\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RichTextEditorForEditing;","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport DOMPurify from 'dompurify';\nimport RichTextEditorForEditing from './CustomEditorForEditing';\n\nimport axios from \"axios\";\nimport { \n  Box, Typography, Button, Breadcrumbs, Paper, CircularProgress,\n  Divider, IconButton, Drawer, List, ListItem, ListItemText,\n  Snackbar, Alert, Chip\n} from '@mui/material';\nimport { \n  ArrowBack, MenuBook, Menu, NavigateBefore, NavigateNext,\n  BookmarkBorder, Bookmark, CheckCircle, Edit, Save\n} from '@mui/icons-material';\n\n// Import the module data and the ChapterContent component\nimport { getModuleById } from '../data/modules';\nimport ChapterContent from '../components/ChapterContent';\nimport { getChapterProgress, updateChapterProgress } from '../utils/progressTracker';\nimport URLSITE from '../constant';\nimport hljs from 'highlight.js';\n// import 'highlight.js/styles/googlecode.css'\n// import 'highlight.js/styles/';\nimport 'highlight.js/styles/atom-one-dark.css';\n\nimport SEO from \"./SEO\"\n// Import Verilog highlighting - make sure you have this installed\nimport 'highlight.js/lib/languages/verilog';\nimport AuthContext from '../context/AuthContext';\n\n// Register Verilog language with highlight.js if available\ntry {\n  const verilogLang = require('highlight.js/lib/languages/verilog');\n  hljs.registerLanguage('verilog', verilogLang);\n} catch (error) {\n  console.warn('Verilog highlighting not available:', error);\n}\n\nconst ChapterView = () => {\n  const { moduleId, chapterId } = useParams();\n  const navigate = useNavigate();\n  const [module, setModule] = useState(null);\n  const dangerousDivRef = useRef()\n  const [chapter, setChapter] = useState(null);\n  const [chapterContent, setChapterContent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [isChapterBookmarked, setIsChapterBookmarked] = useState(false);\n  const [isChapterCompleted, setIsChapterCompleted] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [progress, setProgress] = useState(null);\n  const context = useContext(AuthContext);\n  const [customEditContent, setCustomEditContent] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingContent, setEditingContent] = useState('');\n  const [editorContent,setEditorContent] = useState(\"\")\n  const [finalEditorContent,setFinalEditorContent] = useState(\"\")\n  // Check if user is authorized to edit\n  const isAuthorizedToEdit = () => {\n    return context?.user?.email === 'verigeektech@gmail.com' || \n           context?.user?.wholeData?.email === 'verigeektech@gmail.com';\n  };\n\n  const handleStartEditing = () => {\n    console.log(dangerousDivRef.current.innerHTML)\n    \n    if (!isAuthorizedToEdit()) return;\n    \n    // Set editing content based on current chapter content\n    if (chapterContent?.isNewEditorUsed && chapterContent?.editorContent) {\n      setEditingContent(dangerousDivRef.current.innerHTML)\n    } else {\n      // If using old format, convert sections to HTML\n      let combinedContent = '';\n      chapterContent?.sections?.forEach((section) => {\n        combinedContent += `<h3>${section.title || \"Untitled Section\"}</h3>`;\n        combinedContent += section.content || \"\";\n      });\n      setEditingContent(combinedContent);\n    }\n    \n    setIsEditing(true);\n  };\n\n  const handleSaveEdits = async () => {\n    if (!isAuthorizedToEdit()) return;\n    \n    try {\n      // Prepare the updated content\n      const updatedContent = {\n        ...chapterContent,\n        editorContent: finalEditorContent,\n        isNewEditorUsed: true\n      };\n      console.log(\"update content\")\n      console.log(updatedContent)\n      // Send update request to server\n      const response = await axios.put(`${URLSITE}/api/general/updatechapter/${chapterId}`, {\n        editorContent: finalEditorContent,\n        isNewEditorUsed: true\n      });\n\n      if (response.status === 200) {\n        // Update local state\n        setChapterContent(updatedContent);\n        setIsEditing(false);\n        showSnackbar('Chapter content updated successfully!', 'success');\n      } else {\n        throw new Error('Failed to update chapter content');\n      }\n    } catch (error) {\n      console.error('Error saving chapter content:', error);\n      showSnackbar('Failed to save changes. Please try again.', 'error');\n    }\n  };\n\n  const handleCancelEditing = () => {\n    setIsEditing(false);\n    setEditingContent('');\n  };\n\n  const navigateToNextChapter = () => {\n    if (!context?.currentModule?.chapters) return;\n    \n    let nextIndex = context.currentChapterIndex + 1;\n    if (context.currentModule.chapters.length > nextIndex) {\n      context.setCurrentChapterIndex?.(nextIndex);\n      navigate(`/modules/${moduleId}/chapters/${context.currentModule.chapters[nextIndex].chapterId}`);\n    }\n  };\n\n  const navigateToPrevChapter = () => {\n    if (!context?.currentModule?.chapters) return;\n    \n    let prevIndex = context.currentChapterIndex - 1;\n    if (prevIndex >= 0) {\n      context.setCurrentChapterIndex?.(prevIndex);\n      navigate(`/modules/${moduleId}/chapters/${context.currentModule.chapters[prevIndex].chapterId}`);\n    }\n  };\n\n  // Check user access to paid modules\n  useEffect(() => {\n    if (!moduleId || !module || !module.moduleType) return;\n    if (!context?.user) {\n      setIsAuthenticated(false);\n      return;\n    }\n    \n    setIsAuthenticated(true);\n    \n    const checkModuleAccess = async () => {\n      if (!moduleId || !module) return;\n      \n      try {\n        const response = await axios.post(`${URLSITE}/api/general/user-by-email`, { \n          email: context.user.wholeData?.email \n        });\n        \n        if (response.status === 200) {\n          // If module is not free and user doesn't have access, redirect\n          if (module.moduleType !== \"free\" && \n              !response.data.paidModule?.some(mod => mod.moduleId === moduleId)) {\n            navigate(`/modules/${moduleId}`);\n          }\n        }\n      } catch (err) {\n        console.error('Error checking module access:', err);\n        // Don't redirect on error, just log it\n      }\n    };\n\n    checkModuleAccess();\n  }, [context?.user]);\n\n  // Apply syntax highlighting\n  useEffect(() => {\n    const applyHighlighting = () => {\n      setTimeout(() => {\n        document.querySelectorAll('pre code').forEach((block) => {\n          hljs.highlightBlock(block);\n        });\n      }, 0);\n    };\n    \n    if (!loading) {\n      applyHighlighting();\n    }\n  }, [loading, chapterContent]);\n\n  // Fetch module and chapter data\n  useEffect(() => {\n    const fetchModuleAndChapter = async () => {\n      try {\n        setLoading(true);\n        \n        // Get module data\n        let moduleData = getModuleById(moduleId);\n        if (!moduleData) {\n          throw new Error(`Module with ID ${moduleId} not found`);\n        }\n        \n        setModule(moduleData);\n        \n        // Fetch chapter content from server using chapterId\n        try {\n          const response = await axios.get(`${URLSITE}/api/general/chapter/${chapterId}`);\n          const data = response.data;\n          console.log(data)\n          setChapterContent(data);\n          setCustomEditContent(data.editorContent)\n          // Set chapter basic info\n          setChapter({\n            id: data.id,\n            title: data.title,\n            moduleId: data.moduleId\n          });\n        } catch (err) {\n          console.error('Error fetching chapter content:', err);\n          setError(err.message);\n          \n          // Fallback to module data if API fetch fails\n          if (moduleData?.chapters) {\n            const chapterIdNum = parseInt(chapterId, 10);\n            const fallbackChapter = moduleData.chapters.find(c => c.id === chapterIdNum);\n            \n            if (fallbackChapter) {\n              setChapter(fallbackChapter);\n              // Create minimal chapter content structure\n              setChapterContent({\n                id: fallbackChapter.id,\n                title: fallbackChapter.title,\n                description: fallbackChapter.description || \"\",\n                sections: fallbackChapter.sections || [],\n                codeExamples: fallbackChapter.codeExamples || []\n              });\n            } else {\n              throw new Error(`Chapter with ID ${chapterId} not found`);\n            }\n          }\n        }\n        \n        // Get progress data if authenticated\n        if (isAuthenticated) {\n          try {\n            const progressResponse = await axios.get(`${URLSITE}/api/user/progress/${moduleId}`);\n            if (progressResponse.status === 200) {\n              setProgress(progressResponse.data);\n            }\n          } catch (progressErr) {\n            console.error('Error fetching progress:', progressErr);\n            // Continue without progress data\n          }\n        }\n        \n        // Check if this chapter is bookmarked\n        if (chapterId) {\n          const bookmarkedChapters = JSON.parse(localStorage.getItem('bookmarkedChapters') || '[]');\n          const isBookmarked = bookmarkedChapters.some(\n            bookmark => bookmark.moduleId === moduleId && bookmark.chapterId === chapterId\n          );\n          setIsChapterBookmarked(isBookmarked);\n          \n          // Check if chapter is completed\n          const chapterIdNum = parseInt(chapterId, 10);\n          const isCompleted = getChapterProgress(moduleId, chapterIdNum);\n          setIsChapterCompleted(isCompleted);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchModuleAndChapter();\n  }, [moduleId, chapterId, isAuthenticated]);\n\n  const toggleDrawer = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  // Handle chapter completion\n  const markChapterCompleted = () => {\n    if (!module || !chapter) return;\n    \n    const chapterIdNum = parseInt(chapterId, 10);\n    updateChapterProgress(moduleId, chapterIdNum, true);\n    setIsChapterCompleted(true);\n    showSnackbar('Chapter marked as completed!', 'success');\n  };\n\n  // Handle chapter bookmarking\n  const toggleChapterBookmark = () => {\n    if (!module || !chapter) return;\n    \n    const bookmarkedChapters = JSON.parse(localStorage.getItem('bookmarkedChapters') || '[]');\n    const bookmarkData = {\n      moduleId,\n      chapterId: chapterId.toString(),\n      moduleTitle: module.title,\n      chapterTitle: chapter.title,\n      timestamp: new Date().toISOString()\n    };\n    \n    if (isChapterBookmarked) {\n      // Remove bookmark\n      const updatedBookmarks = bookmarkedChapters.filter(\n        bookmark => !(bookmark.moduleId === moduleId && bookmark.chapterId === chapterId.toString())\n      );\n      localStorage.setItem('bookmarkedChapters', JSON.stringify(updatedBookmarks));\n      setIsChapterBookmarked(false);\n      showSnackbar('Chapter bookmark removed', 'info');\n    } else {\n      // Add bookmark\n      bookmarkedChapters.push(bookmarkData);\n      localStorage.setItem('bookmarkedChapters', JSON.stringify(bookmarkedChapters));\n      setIsChapterBookmarked(true);\n      showSnackbar('Chapter bookmarked successfully! Access it anytime from your profile.', 'success');\n    }\n  };\n  \n  // Show snackbar message\n  const showSnackbar = (message, severity = 'success') => {\n    setSnackbarMessage(message);\n    setSnackbarSeverity(severity);\n    setSnackbarOpen(true);\n  };\n  \n  // Handle quiz completion from ChapterContent\n  const handleQuizCompletion = (passed) => {\n    if (passed) {\n      setIsChapterCompleted(true);\n      showSnackbar('Congratulations! You passed the quiz and completed this chapter.', 'success');\n    } else {\n      showSnackbar('You need to score at least 70% to complete this chapter.', 'warning');\n    }\n  };\n  \n  // Render loading state\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Render error state if module or chapter not found\n  if (error || !module || !chapter) {\n    return (\n      <Box className=\"container page-container\" sx={{ textAlign: 'center', py: 8 }}>\n        <Typography variant=\"h5\">\n          {error || \"Content not found\"}\n        </Typography>\n        <Button component={Link} to=\"/modules\" sx={{ mt: 2 }}>\n          Back to Modules\n        </Button>\n      </Box>\n    );\n  }\n\n  // Calculate chapter navigation info\n  const currentIndex = module.chapters ? \n    module.chapters.findIndex(ch => ch.id === parseInt(chapterId, 10)) : -1;\n  const isFirstChapter = currentIndex === 0;\n  const isLastChapter = currentIndex === (module.chapters?.length - 1) || currentIndex === -1;\n\n  return (\n    <>\n      {chapter && chapterContent?.description && (\n        <SEO \n          title={chapter?.title} \n          description={chapterContent?.description || \"\"} \n          url={\"verigeek.xyz\"}\n        />\n      )}\n      \n      {/* Drawer for chapter navigation */}\n      <Drawer\n        anchor=\"left\"\n        open={drawerOpen}\n        onClose={toggleDrawer}\n      >\n        <Box sx={{ width: 300, p: 2 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>\n            {context?.currentModule?.title || module.title}\n          </Typography>\n          <Divider sx={{ mb: 2 }} />\n          <List>\n            {module.chapters?.map(ch => {\n              const isCurrentChapter = ch.id === parseInt(chapterId, 10);\n              const isCompleted = getChapterProgress(moduleId, ch.id);\n              \n              return (\n                <ListItem \n                  key={ch.id}\n                  button \n                  component={Link}\n                  to={`/modules/${moduleId}/chapters/${ch.id}`}\n                  selected={isCurrentChapter}\n                  sx={{ \n                    borderRadius: 1,\n                    mb: 0.5,\n                    '&.Mui-selected': {\n                      bgcolor: 'primary.light',\n                      color: 'primary.contrastText',\n                    }\n                  }}\n                >\n                  {isCompleted && (\n                    <CheckCircle \n                      sx={{ \n                        mr: 1, \n                        fontSize: '1rem',\n                        color: 'success.main'\n                      }} \n                    />\n                  )}\n                  <ListItemText \n                    primary={`${ch.id}. ${ch.title}`} \n                    primaryTypographyProps={{\n                      fontWeight: isCurrentChapter ? 'bold' : 'normal',\n                      fontSize: '0.9rem'\n                    }}\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        </Box>\n      </Drawer>\n\n      <Box className=\"container page-container\">\n        \n        {/* Rich Text Editor for Editing */}\n        {isEditing && (\n          <Box sx={{ mb: 4 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Editing Chapter Content</Typography>\n              <Box sx={{ display: 'flex', gap: 1 }}>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<Save />}\n                  onClick={handleSaveEdits}\n                  color=\"primary\"\n                >\n                  Save Edits\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  onClick={handleCancelEditing}\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </Box>\n            <RichTextEditorForEditing \n            editorContent={finalEditorContent}\n            setEditorContent={setFinalEditorContent}\n            customEditContent={customEditContent}\n            />\n          </Box>\n        )}\n        \n        {/* Header with navigation */}\n        <Box sx={{ mb: 3, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <IconButton onClick={toggleDrawer} sx={{ mr: 1 }}>\n              <Menu />\n            </IconButton>\n            <Breadcrumbs>\n              <Link to=\"/\" style={{ textDecoration: 'none', color: 'inherit' }}>\n                Home\n              </Link>\n              <Link to=\"/modules\" style={{ textDecoration: 'none', color: 'inherit' }}>\n                Modules\n              </Link>\n              <Link to={`/modules/${moduleId}`} style={{ textDecoration: 'none', color: 'inherit' }}>\n                {context?.currentModule?.title}\n              </Link>\n              <Typography color=\"text.primary\">\n                Chapter {chapter?.title}\n              </Typography>\n            </Breadcrumbs>\n          </Box>\n          <Button \n            component={Link} \n            to={`/modules/${moduleId}`}\n            startIcon={<ArrowBack />}\n          >\n            Back to Module\n          </Button>\n        </Box>\n\n        {/* Chapter progress indicator */}\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <MenuBook sx={{ mr: 1, color: 'primary.main' }} />\n            <Typography variant=\"subtitle1\">\n              Chapter {chapter?.title}\n              {isChapterCompleted && (\n                <Chip \n                  size=\"small\" \n                  icon={<CheckCircle />} \n                  label=\"Completed\" \n                  color=\"success\" \n                  sx={{ ml: 2 }}\n                />\n              )}\n            </Typography>\n          </Box>\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            {/* Start Editing Button - Only visible to authorized user */}\n            {isAuthorizedToEdit() && !isEditing && (\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                startIcon={<Edit />}\n                onClick={handleStartEditing}\n                color=\"primary\"\n              >\n                Start Editing\n              </Button>\n            )}\n            {!isChapterCompleted && (\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                startIcon={<CheckCircle />}\n                onClick={markChapterCompleted}\n              >\n                Mark as Completed\n              </Button>\n            )}\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              startIcon={isChapterBookmarked ? <Bookmark /> : <BookmarkBorder />}\n              onClick={toggleChapterBookmark}\n            >\n              {isChapterBookmarked ? 'Bookmarked' : 'Bookmark'}\n            </Button>\n          </Box>\n        </Box>\n\n        {/* Main content - Only show when not editing */}\n        {!isEditing && (\n          <Paper elevation={0} sx={{ borderRadius: 2, overflow: 'hidden', mb: 4 }}>\n            {/* Chapter title */}\n            <Box sx={{ p: 4, pb: 2 }}>\n              <Typography variant=\"h4\" gutterBottom>\n                {chapterContent?.title || chapter.title || \"\"}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\n                {chapterContent?.description || \"\"}\n              </Typography>\n              \n              {chapterContent?.estimatedTime && (\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Estimated time: {chapterContent.estimatedTime}\n                </Typography>\n              )}\n            </Box>\n            \n            {/* Display each section content */}\n            {\n              chapterContent !== null && chapterContent.isNewEditorUsed === true ? (\n                <div\n                ref={dangerousDivRef}\n                  className=\"prose prose-purple max-w-none bg-white p-4 rounded-lg shadow-lg border border-purple-200 min-h-full preview-content\"\n                  dangerouslySetInnerHTML={{\n                    __html: DOMPurify.sanitize(chapterContent.editorContent || \"\", {\n                      FORBID_ATTR: ['style'], // strips all inline styles\n                    }),\n                  }}\n                />\n              ) : (\n                <>\n                  {chapterContent?.sections?.map((section) => (\n                    <Box key={section.id} sx={{ p: 4 }}>\n                      <Typography className='className=\"prose prose-purple max-w-none bg-white p-4 rounded-lg shadow-lg border border-purple-200 min-h-full preview-content\"\n                 ' variant=\"h5\" gutterBottom sx={{ mt: 2 }}>\n                        {section.title || \"Untitled Section\"}\n                      </Typography>\n                      <div\n                        className=\"prose prose-purple max-w-none bg-white p-4 rounded-lg shadow-lg border border-purple-200 min-h-full preview-content\"\n                   dangerouslySetInnerHTML={{ __html: section.content || \"\" }}\n                      />\n                    </Box>\n                  ))}\n                  \n                  {/* Code examples section */}\n                  {chapterContent?.codeExamples?.length > 0 && (\n                    <Box sx={{ p: 4 }}>\n                      <Typography variant=\"h5\" gutterBottom sx={{ mt: 2 }}>\n                        Code Examples\n                      </Typography>\n                      {chapterContent.codeExamples.map((example) => (\n                        <Box key={example.id} sx={{ mb: 4 }}>\n                          <Typography variant=\"h6\" gutterBottom>\n                            {example.title || \"Untitled Example\"}\n                          </Typography>\n                          <Typography variant=\"body2\" gutterBottom>\n                            {example.description || \"\"}\n                          </Typography>\n                          <pre className=\"bg-gray-100 p-4 rounded overflow-auto\">\n                            <code className={example.language || \"\"}>\n                              {example.code || \"\"}\n                            </code>\n                          </pre>\n                          {example.explanation && (\n                            <Typography variant=\"body2\" sx={{ mt: 2 }}>\n                              {example.explanation}\n                            </Typography>\n                          )}\n                        </Box>\n                      ))}\n                    </Box>\n                  )}\n                </>\n              )\n            }\n            {/* If no content is available, use the ChapterContent component as fallback */}\n            {(!chapterContent || (!chapterContent.sections?.length && !chapterContent.codeExamples?.length)) && (\n              <ChapterContent \n                chapter={chapter} \n                moduleId={moduleId} \n                onQuizCompletion={handleQuizCompletion}\n                onNextChapter={navigateToNextChapter}\n              />\n            )}\n          </Paper>\n        )}\n\n        {/* Navigation buttons - Only show when not editing */}\n        {!isEditing && (\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 4 }}>\n            <Button \n              variant=\"outlined\"\n              startIcon={<NavigateBefore />}\n              onClick={navigateToPrevChapter}\n            >\n              Previous Chapter\n            </Button>\n            <Button \n              variant=\"contained\"\n              endIcon={<NavigateNext />}\n              onClick={navigateToNextChapter}\n            >\n              Next Chapter\n            </Button>\n          </Box>\n        )}\n\n        {/* Snackbar for notifications */}\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={6000}\n          onClose={() => setSnackbarOpen(false)}\n        >\n          <Alert \n            onClose={() => setSnackbarOpen(false)} \n            severity={snackbarSeverity}\n          >\n            {snackbarMessage}\n          </Alert>\n        </Snackbar>\n      </Box>\n    </>\n  );\n};\n\nexport default ChapterView;","/**\r\n * Progress Tracker Utility\r\n * \r\n * This utility provides functions to track and manage a user's progress through modules and chapters.\r\n * It uses localStorage to persist progress data across sessions.\r\n */\r\n\r\n/**\r\n * Initialize progress data for a module\r\n * @param {string} moduleId - The ID of the module\r\n * @param {Array} chapterIds - Array of chapter IDs in the module\r\n */\r\nexport const initializeProgressData = (moduleId, chapterIds) => {\r\n  try {\r\n    // Check if module progress already exists\r\n    const moduleProgress = localStorage.getItem(`module-progress-${moduleId}`);\r\n    \r\n    if (!moduleProgress) {\r\n      // Initialize module progress to 0\r\n      localStorage.setItem(`module-progress-${moduleId}`, '0');\r\n      \r\n      // Initialize chapter progress\r\n      chapterIds.forEach(chapterId => {\r\n        const chapterKey = `chapter-${moduleId}-${chapterId}`;\r\n        if (localStorage.getItem(chapterKey) === null) {\r\n          localStorage.setItem(chapterKey, 'false');\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error initializing progress data:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Update a chapter's completion status\r\n * @param {string} moduleId - The ID of the module\r\n * @param {string|number} chapterId - The ID of the chapter\r\n * @param {boolean} isCompleted - Whether the chapter is completed\r\n */\r\nexport const updateChapterProgress = (moduleId, chapterId, isCompleted) => {\r\n  try {\r\n    // Update chapter progress\r\n    const chapterKey = `chapter-${moduleId}-${chapterId}`;\r\n    localStorage.setItem(chapterKey, isCompleted.toString());\r\n    \r\n    // Update overall module progress\r\n    updateModuleProgress(moduleId);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error updating chapter progress:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Calculate and update the overall module completion percentage\r\n * @param {string} moduleId - The ID of the module\r\n */\r\nexport const updateModuleProgress = (moduleId) => {\r\n  try {\r\n    // Find all chapters for this module\r\n    const allChapterKeys = Object.keys(localStorage).filter(key => \r\n      key.startsWith(`chapter-${moduleId}-`)\r\n    );\r\n    \r\n    if (allChapterKeys.length === 0) return 0;\r\n    \r\n    // Calculate completion percentage\r\n    const completedChapters = allChapterKeys.filter(key => \r\n      localStorage.getItem(key) === 'true'\r\n    ).length;\r\n    \r\n    const percentage = Math.round((completedChapters / allChapterKeys.length) * 100);\r\n    \r\n    // Save to localStorage\r\n    localStorage.setItem(`module-progress-${moduleId}`, percentage.toString());\r\n    \r\n    return percentage;\r\n  } catch (error) {\r\n    console.error('Error updating module progress:', error);\r\n    return 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Get a chapter's completion status\r\n * @param {string} moduleId - The ID of the module\r\n * @param {string|number} chapterId - The ID of the chapter\r\n * @returns {boolean} - Whether the chapter is completed\r\n */\r\nexport const getChapterProgress = (moduleId, chapterId) => {\r\n  try {\r\n    const chapterKey = `chapter-${moduleId}-${chapterId}`;\r\n    return localStorage.getItem(chapterKey) === 'true';\r\n  } catch (error) {\r\n    console.error('Error getting chapter progress:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Get the overall module completion percentage\r\n * @param {string} moduleId - The ID of the module\r\n * @returns {number} - Percentage of module completion (0-100)\r\n */\r\nexport const getModuleProgress = (moduleId) => {\r\n  try {\r\n    const progress = localStorage.getItem(`module-progress-${moduleId}`);\r\n    return progress ? parseInt(progress, 10) : 0;\r\n  } catch (error) {\r\n    console.error('Error getting module progress:', error);\r\n    return 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Mark a quiz as completed and update chapter progress\r\n * @param {string} moduleId - The ID of the module\r\n * @param {string|number} chapterId - The ID of the chapter\r\n * @param {number} score - The quiz score (0-100)\r\n * @returns {boolean} - Whether the operation was successful\r\n */\r\nexport const markQuizCompleted = (moduleId, chapterId, score) => {\r\n  try {\r\n    // Save quiz score\r\n    const quizKey = `quiz-${moduleId}-${chapterId}`;\r\n    localStorage.setItem(quizKey, score.toString());\r\n    \r\n    // Mark chapter as completed if score is passing (>=70%)\r\n    if (score >= 70) {\r\n      updateChapterProgress(moduleId, chapterId, true);\r\n    }\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error marking quiz completed:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Get the quiz score for a chapter\r\n * @param {string} moduleId - The ID of the module\r\n * @param {string|number} chapterId - The ID of the chapter\r\n * @returns {number|null} - The quiz score (0-100) or null if not taken\r\n */\r\nexport const getQuizScore = (moduleId, chapterId) => {\r\n  try {\r\n    const quizKey = `quiz-${moduleId}-${chapterId}`;\r\n    const score = localStorage.getItem(quizKey);\r\n    return score ? parseFloat(score) : null;\r\n  } catch (error) {\r\n    console.error('Error getting quiz score:', error);\r\n    return null;\r\n  }\r\n}; ","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { \n  Box, Typography, Paper, Accordion, AccordionSummary, AccordionDetails,\n  Divider, Button, Grid, Card, CardContent, CardMedia, CardActionArea, \n  Chip, Radio, RadioGroup, FormControlLabel, FormControl, Alert, Snackbar\n} from '@mui/material';\nimport { \n  ExpandMore, PlayArrow, Code, Quiz, Check, VideoLibrary,\n  Assignment, BookmarkBorder, Bookmark, ArrowForward, Close\n} from '@mui/icons-material';\nimport { markQuizCompleted } from '../utils/progressTracker';\n\nconst ChapterContent = ({ chapter, moduleId, onQuizCompletion, onNextChapter }) => {\n  const [searchParams] = useSearchParams();\n  const [expandedSection, setExpandedSection] = useState(null);\n  const [quizAnswers, setQuizAnswers] = useState({});\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  const [bookmarked, setBookmarked] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [sectionProgress, setSectionProgress] = useState({});\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('content');\n  const [quizScore, setQuizScore] = useState(0);\n  const [quizPassed, setQuizPassed] = useState(false);\n\n  // Check if the chapter has quiz questions in either chapter.quiz.questions or chapter.questions\n  const hasQuiz = Boolean(\n    (chapter.quiz && chapter.quiz.questions && chapter.quiz.questions.length > 0) ||\n    (chapter.questions && chapter.questions.length > 0)\n  );\n\n  // Get the questions from the correct location\n  const getQuizQuestions = () => {\n    if (chapter.quiz && chapter.quiz.questions) {\n      return chapter.quiz.questions;\n    } else if (chapter.questions) {\n      return chapter.questions;\n    }\n    return [];\n  };\n\n  const quizQuestions = getQuizQuestions();\n  const quizTitle = chapter.quiz?.title || `${chapter.title} Quiz`;\n  const quizDescription = chapter.quiz?.description || 'Test your knowledge of this chapter\\'s content.';\n\n  useEffect(() => {\n    // Load bookmarks from localStorage\n    const savedBookmarks = localStorage.getItem(`bookmarks-${moduleId}-${chapter.id}`);\n    if (savedBookmarks) {\n      setBookmarked(JSON.parse(savedBookmarks));\n    }\n    \n    // Load progress from localStorage\n    const savedProgress = localStorage.getItem(`progress-${moduleId}-${chapter.id}`);\n    if (savedProgress) {\n      setSectionProgress(JSON.parse(savedProgress));\n      \n      // Calculate overall progress\n      const progressObj = JSON.parse(savedProgress);\n      const completedSections = Object.values(progressObj).filter(val => val).length;\n      const totalSections = chapter.sections && Array.isArray(chapter.sections) ? chapter.sections.length : 0;\n      if (totalSections > 0) {\n        setProgress(Math.round((completedSections / totalSections) * 100));\n      }\n    }\n  }, [moduleId, chapter.id, chapter.sections]);\n\n  // Set active tab based on URL parameters\n  useEffect(() => {\n    const tabParam = searchParams.get('tab');\n    if (tabParam && (tabParam === 'content' || tabParam === 'quiz')) {\n      setActiveTab(tabParam);\n    }\n  }, [searchParams]);\n\n  const handleSectionChange = (sectionId) => {\n    setExpandedSection(expandedSection === sectionId ? null : sectionId);\n    \n    // Mark section as read when expanded\n    if (expandedSection !== sectionId && !sectionProgress[sectionId]) {\n      const updatedProgress = { ...sectionProgress, [sectionId]: true };\n      setSectionProgress(updatedProgress);\n      \n      // Save progress to localStorage\n      localStorage.setItem(`progress-${moduleId}-${chapter.id}`, JSON.stringify(updatedProgress));\n      \n      // Update overall progress\n      const completedSections = Object.values(updatedProgress).filter(val => val).length;\n      const totalSections = chapter.sections && Array.isArray(chapter.sections) ? chapter.sections.length : 0;\n      if (totalSections > 0) {\n        setProgress(Math.round((completedSections / totalSections) * 100));\n      }\n    }\n  };\n\n  const handleAnswerChange = (questionId, value) => {\n    setQuizAnswers(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n\n  const handleQuizSubmit = () => {\n    // Calculate the score\n    let correctCount = 0;\n    let totalQuestions = 0;\n    \n    if (quizQuestions.length > 0) {\n      totalQuestions = quizQuestions.length;\n      \n      quizQuestions.forEach((question, index) => {\n        const questionId = question.id || index;\n        if (quizAnswers[questionId] === question.correctAnswer) {\n          correctCount++;\n        }\n      });\n    }\n    \n    const score = totalQuestions > 0 ? (correctCount / totalQuestions) * 100 : 0;\n    const passed = score >= 70; // Pass threshold is 70%\n    \n    setQuizScore(score);\n    setQuizPassed(passed);\n    setQuizSubmitted(true);\n    \n    // Save the quiz result to localStorage\n    if (passed) {\n      markQuizCompleted(moduleId, chapter.id, score);\n    }\n    \n    // Notify the parent component\n    if (onQuizCompletion) {\n      onQuizCompletion(passed, score);\n    }\n  };\n\n  const resetQuiz = () => {\n    setQuizAnswers({});\n    setQuizSubmitted(false);\n    setQuizScore(0);\n    setQuizPassed(false);\n  };\n\n  const toggleBookmark = (sectionId) => {\n    let updatedBookmarks;\n    if (bookmarked.includes(sectionId)) {\n      updatedBookmarks = bookmarked.filter(id => id !== sectionId);\n      setSnackbarMessage('Bookmark removed');\n    } else {\n      updatedBookmarks = [...bookmarked, sectionId];\n      setSnackbarMessage('Bookmark added - you can access this later from your profile');\n    }\n    \n    setBookmarked(updatedBookmarks);\n    localStorage.setItem(`bookmarks-${moduleId}-${chapter.id}`, JSON.stringify(updatedBookmarks));\n    setSnackbarOpen(true);\n  };\n\n  const handleNextChapter = () => {\n    if (onNextChapter) {\n      onNextChapter();\n    }\n  };\n\n  if (!chapter) {\n    return <Box sx={{ p: 3 }}><Typography>Chapter not found</Typography></Box>;\n  }\n\n  // Check if sections exist and provide a fallback message if not\n  const hasNoSections = !chapter.sections || !Array.isArray(chapter.sections) || chapter.sections.length === 0;\n\n  return (\n    <Box>\n      <Box sx={{ p: 3, bgcolor: 'primary.main', color: 'white' }}>\n        <Typography variant=\"h4\" gutterBottom>{chapter.title}</Typography>\n        <Typography variant=\"subtitle1\">{chapter.description}</Typography>\n      </Box>\n      \n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Box sx={{ display: 'flex' }}>\n          <Button \n            onClick={() => setActiveTab('content')}\n            sx={{ \n              py: 2, \n              px: 3, \n              borderBottom: activeTab === 'content' ? '2px solid' : 'none',\n              borderColor: 'primary.main',\n              color: activeTab === 'content' ? 'primary.main' : 'text.primary',\n              borderRadius: 0,\n              fontWeight: activeTab === 'content' ? 'bold' : 'normal'\n            }}\n          >\n            Content\n          </Button>\n          {hasQuiz && (\n            <Button \n              onClick={() => setActiveTab('quiz')}\n              sx={{ \n                py: 2, \n                px: 3, \n                borderBottom: activeTab === 'quiz' ? '2px solid' : 'none',\n                borderColor: 'primary.main',\n                color: activeTab === 'quiz' ? 'primary.main' : 'text.primary',\n                borderRadius: 0,\n                fontWeight: activeTab === 'quiz' ? 'bold' : 'normal'\n              }}\n            >\n              Quiz\n            </Button>\n          )}\n        </Box>\n      </Box>\n      \n      <Box sx={{ p: 3 }}>\n        {activeTab === 'content' ? (\n          <>\n            {hasNoSections ? (\n              <Paper elevation={0} variant=\"outlined\" sx={{ p: 3, borderRadius: 2, textAlign: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>Content Coming Soon</Typography>\n                <Typography variant=\"body1\">\n                  The content for this chapter is currently being developed. \n                  Please check back later for updates.\n                </Typography>\n              </Paper>\n            ) : (\n              chapter.sections.map((section) => (\n                <Accordion \n                  key={section.id}\n                  expanded={expandedSection === section.id}\n                  onChange={() => handleSectionChange(section.id)}\n                  sx={{ \n                    mb: 2, \n                    overflow: 'hidden',\n                    bgcolor: sectionProgress[section.id] ? 'rgba(76, 175, 80, 0.04)' : 'transparent',\n                    position: 'relative'\n                  }}\n                >\n                  <AccordionSummary expandIcon={<ExpandMore />} sx={{ bgcolor: 'action.hover' }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', justifyContent: 'space-between' }}>\n                      <Typography sx={{ fontWeight: expandedSection === section.id ? 'bold' : 'normal' }}>\n                        {section.id} - {section.title}\n                        {sectionProgress[section.id] && (\n                          <Chip\n                            label=\"Completed\"\n                            size=\"small\"\n                            color=\"success\"\n                            sx={{ ml: 2, height: 20, fontSize: '0.6rem' }}\n                          />\n                        )}\n                      </Typography>\n                      <Button \n                        size=\"small\" \n                        onClick={(e) => {\n                          e.stopPropagation();\n                          toggleBookmark(section.id);\n                        }}\n                        startIcon={bookmarked.includes(section.id) ? <Bookmark color=\"primary\" /> : <BookmarkBorder />}\n                        sx={{ ml: 2 }}\n                      >\n                        {bookmarked.includes(section.id) ? 'Bookmarked' : 'Bookmark'}\n                      </Button>\n                    </Box>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Box sx={{ p: 1 }} dangerouslySetInnerHTML={{ __html: section.content }} />\n                  </AccordionDetails>\n                </Accordion>\n              ))\n            )}\n            \n            {bookmarked.length > 0 && !hasNoSections && (\n              <Box sx={{ mt: 4, mb: 4 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Your Bookmarked Sections\n                </Typography>\n                <Paper elevation={0} variant=\"outlined\" sx={{ p: 2, borderRadius: 2 }}>\n                  <Grid container spacing={2}>\n                    {bookmarked.map(bookmarkId => {\n                      const section = chapter.sections.find(s => s.id === bookmarkId);\n                      if (!section) return null;\n                      \n                      return (\n                        <Grid item xs={12} sm={6} md={4} key={bookmarkId}>\n                          <Paper \n                            variant=\"outlined\" \n                            sx={{ \n                              p: 2, \n                              cursor: 'pointer',\n                              '&:hover': { bgcolor: 'rgba(0, 0, 0, 0.03)' }\n                            }}\n                            onClick={() => {\n                              setExpandedSection(bookmarkId);\n                              setTimeout(() => {\n                                document.getElementById(`section-${bookmarkId}`)?.scrollIntoView({ behavior: 'smooth' });\n                              }, 100);\n                            }}\n                          >\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                              <Bookmark color=\"primary\" sx={{ mr: 1, fontSize: '1rem' }} />\n                              <Typography variant=\"body2\" fontWeight=\"medium\">\n                                {section.title}\n                              </Typography>\n                            </Box>\n                          </Paper>\n                        </Grid>\n                      );\n                    })}\n                  </Grid>\n                </Paper>\n              </Box>\n            )}\n            \n            {chapter.examples && chapter.examples.length > 0 && (\n              <>\n                <Typography variant=\"h5\" gutterBottom sx={{ mt: 4, mb: 2 }}>\n                  Code Examples\n                </Typography>\n                \n                <Grid container spacing={3}>\n                  {chapter.examples.map((example) => (\n                    <Grid item xs={12} md={6} key={example.id}>\n                      <Paper elevation={2} sx={{ borderRadius: 2, overflow: 'hidden' }}>\n                        <Box sx={{ bgcolor: 'primary.main', color: 'primary.contrastText', p: 2, display: 'flex', alignItems: 'center' }}>\n                          <Code sx={{ mr: 1 }} />\n                          <Typography variant=\"h6\">{example.title}</Typography>\n                        </Box>\n                        <Box sx={{ p: 2 }}>\n                          <Typography variant=\"body2\" paragraph>{example.description}</Typography>\n                          <Paper variant=\"outlined\" sx={{ \n                            p: 2, \n                            bgcolor: '#272822', \n                            color: '#f8f8f2', \n                            fontFamily: 'monospace',\n                            whiteSpace: 'pre-wrap',\n                            overflowX: 'auto',\n                            fontSize: '0.875rem'\n                          }}>\n                            {example.code}\n                          </Paper>\n                          <Typography variant=\"subtitle2\" sx={{ mt: 2, fontWeight: 'bold' }}>Explanation:</Typography>\n                          <Typography variant=\"body2\">{example.explanation}</Typography>\n                        </Box>\n                      </Paper>\n                    </Grid>\n                  ))}\n                </Grid>\n              </>\n            )}\n            \n            {chapter.videos && chapter.videos.length > 0 && (\n              <>\n                <Typography variant=\"h5\" gutterBottom sx={{ mt: 4, mb: 2 }}>\n                  Video Resources\n                </Typography>\n                \n                <Grid container spacing={3}>\n                  {chapter.videos.map((video) => (\n                    <Grid item xs={12} sm={6} md={4} key={video.id}>\n                      <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n                        <CardActionArea component=\"a\" href={video.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          <Box sx={{ position: 'relative' }}>\n                            <CardMedia\n                              component=\"img\"\n                              height=\"140\"\n                              image={video.thumbnail}\n                              alt={video.title}\n                            />\n                            <Box sx={{ \n                              position: 'absolute', \n                              top: 0, \n                              left: 0, \n                              width: '100%', \n                              height: '100%', \n                              display: 'flex', \n                              alignItems: 'center', \n                              justifyContent: 'center',\n                              background: 'rgba(0,0,0,0.3)',\n                              transition: 'background 0.3s',\n                              '&:hover': { background: 'rgba(0,0,0,0.5)' }\n                            }}>\n                              <PlayArrow sx={{ fontSize: 60, color: 'white' }} />\n                            </Box>\n                          </Box>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\n              Chapter Quiz\n            </Typography>\n            \n            <Paper sx={{ p: 3, borderRadius: 2 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Quiz sx={{ mr: 1, color: 'primary.main' }} />\n                <Typography variant=\"h6\">{quizTitle}</Typography>\n              </Box>\n              \n              <Typography variant=\"body2\" paragraph>\n                {quizDescription}\n              </Typography>\n              \n              {quizSubmitted && quizScore && (\n                <Alert \n                  severity={quizPassed ? \"success\" : \"warning\"} \n                  sx={{ mb: 3 }}\n                >\n                  <Typography variant=\"subtitle2\">\n                    {quizPassed \n                      ? \"Congratulations! You passed the quiz.\" \n                      : \"You need to review this chapter again.\"}\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    Your score: {quizScore.toFixed(1)}%\n                  </Typography>\n                </Alert>\n              )}\n              \n              {quizQuestions.map((question, index) => {\n                const questionId = question.id || index;\n                return (\n                  <Box key={questionId} sx={{ mb: 3, pb: 3, borderBottom: index < quizQuestions.length - 1 ? '1px solid #e0e0e0' : 'none' }}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {index + 1}. {question.question}\n                    </Typography>\n                    \n                    <FormControl component=\"fieldset\" sx={{ ml: 2 }}>\n                      <RadioGroup\n                        value={quizAnswers[questionId] || ''}\n                        onChange={(e) => handleAnswerChange(questionId, Number(e.target.value))}\n                      >\n                        {question.options.map((option, optIndex) => {\n                          // Handle both array of strings and array of objects\n                          const optionId = typeof option === 'object' ? option.id : optIndex;\n                          const optionText = typeof option === 'object' ? option.text : option;\n                          \n                          return (\n                            <FormControlLabel\n                              key={optionId}\n                              value={optionId}\n                              control={<Radio />}\n                              label={optionText}\n                              disabled={quizSubmitted}\n                              sx={{\n                                ...(quizSubmitted && optionId === question.correctAnswer && {\n                                  color: 'success.main',\n                                  fontWeight: 'bold'\n                                }),\n                                ...(quizSubmitted && quizAnswers[questionId] === optionId && quizAnswers[questionId] !== question.correctAnswer && {\n                                  color: 'error.main'\n                                })\n                              }}\n                            />\n                          );\n                        })}\n                      </RadioGroup>\n                    </FormControl>\n                    \n                    {quizSubmitted && (\n                      <Box sx={{ mt: 1, ml: 2 }}>\n                        {quizAnswers[questionId] === question.correctAnswer ? (\n                          <Typography variant=\"body2\" sx={{ color: 'success.main', display: 'flex', alignItems: 'center' }}>\n                            <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\n                            Correct!\n                          </Typography>\n                        ) : (\n                          <Typography variant=\"body2\" sx={{ color: 'error.main' }}>\n                            Incorrect. The correct answer is: {\n                              typeof question.options[question.correctAnswer] === 'object' \n                                ? question.options[question.correctAnswer]?.text \n                                : question.options[question.correctAnswer]\n                            }\n                          </Typography>\n                        )}\n                        \n                        <Typography variant=\"body2\" sx={{ mt: 1, fontStyle: 'italic' }}>\n                          {question.explanation}\n                        </Typography>\n                      </Box>\n                    )}\n                  </Box>\n                );\n              })}\n              \n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 3 }}>\n                {quizSubmitted ? (\n                  <Button \n                    variant=\"outlined\" \n                    onClick={resetQuiz} \n                    startIcon={<Assignment />}\n                  >\n                    Retake Quiz\n                  </Button>\n                ) : (\n                  <Button \n                    variant=\"contained\" \n                    onClick={handleQuizSubmit} \n                    startIcon={<Check />}\n                    disabled={Object.keys(quizAnswers).length !== quizQuestions.length}\n                  >\n                    Submit Answers\n                  </Button>\n                )}\n                \n                <Button \n                  variant=\"outlined\" \n                  onClick={handleNextChapter} \n                  endIcon={<ArrowForward />}\n                >\n                  Next Chapter\n                </Button>\n              </Box>\n            </Paper>\n          </>\n        )}\n      </Box>\n      \n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={3000}\n        onClose={() => setSnackbarOpen(false)}\n        message={snackbarMessage}\n      />\n    </Box>\n  );\n};\n\nexport default ChapterContent; "],"names":["lowlight","createLowlight","register","javascript","python","css","html","json","bash","sql","java","cpp","php","CustomImageExtension","ImageExtension","extend","addAttributes","_this$parent","this","parent","call","width","default","parseHTML","element","getAttribute","renderHTML","attributes","height","align","style","float","CustomTable","Table","_this$parent2","alignment","marginLeft","marginRight","left","center","right","_ref","editorContent","setEditorContent","customEditContent","setCustomEditContent","fileInputRef","useRef","fontSize","setFontSize","useState","showUploadModal","setShowUploadModal","isFullScreen","setIsFullScreen","showImageModal","setShowImageModal","selectedImage","setSelectedImage","showTableModal","setShowTableModal","tableSettings","setTableSettings","rows","cols","withHeaderRow","editor","useEditor","extensions","StarterKit","configure","HTMLAttributes","class","CodeBlockLowlight","TextAlign","types","UnderlineExtension","TextStyle","Color","Highlight","multicolor","resizable","TableRow","TableHeader","TableCell","content","editorProps","handleClickOn","view","pos","node","nodePos","event","type","name","src","attrs","onUpdate","_ref2","console","log","getHTML","onCreate","_ref3","useEffect","handleUpdate","setTimeout","previewEl","document","querySelector","window","hljs","querySelectorAll","forEach","block","highlightElement","on","off","addImageFromUrl","useCallback","url","prompt","chain","focus","setImage","run","addImageFromFile","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","updateImageAttributes","state","doc","descendants","setNodeSelection","updateAttributes","prev","insertTable","addTableRow","addRowAfter","deleteTableRow","deleteRow","addTableColumn","addColumnAfter","deleteTableColumn","deleteColumn","deleteTable","toggleHeaderRow","mergeTableCells","mergeCells","splitTableCell","splitCell","saveContent","exportAsText","getText","blob","Blob","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","uploadContent","copyToClipboard","async","navigator","clipboard","writeText","alert","err","error","textArea","value","body","appendChild","select","execCommand","removeChild","changeFontSize","size","editorEl","_jsx","className","children","ToolbarButton","_ref4","onClick","isActive","disabled","title","_jsxs","Minimize2","Maximize2","toggleBold","Bold","toggleItalic","Italic","toggleUnderline","Underline","toggleStrike","Strikethrough","setTextAlign","textAlign","AlignLeft","AlignCenter","AlignRight","toggleBulletList","List","toggleOrderedList","ListOrdered","toggleBlockquote","Quote","toggleCodeBlock","Code","setHorizontalRule","Minus","TableIcon","can","Plus","MoreHorizontal","MoreVertical","Trash2","onChange","e","setColor","defaultValue","toggleHighlight","color","undo","Undo","redo","Redo","Type","Number","map","level","toggleHeading","Grid3x3","Image","_fileInputRef$current","current","Upload","Copy","Save","Download","FileText","EditorContent","Move","dangerouslySetInnerHTML","__html","ref","accept","parseInt","deleteRange","from","to","min","max","caption","placeholder","id","checked","htmlFor","verilogLang","require","registerLanguage","warn","ChapterView","_module$chapters","_context$currentModul3","_module$chapters2","_context$currentModul4","_chapterContent$secti2","_chapterContent$codeE","_chapterContent$secti3","_chapterContent$codeE2","moduleId","chapterId","useParams","navigate","useNavigate","module","setModule","dangerousDivRef","chapter","setChapter","chapterContent","setChapterContent","loading","setLoading","drawerOpen","setDrawerOpen","isChapterBookmarked","setIsChapterBookmarked","isChapterCompleted","setIsChapterCompleted","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","setError","isAuthenticated","setIsAuthenticated","progress","setProgress","context","useContext","AuthContext","isEditing","setIsEditing","editingContent","setEditingContent","finalEditorContent","setFinalEditorContent","isAuthorizedToEdit","_context$user","_context$user2","_context$user2$wholeD","user","email","wholeData","navigateToNextChapter","_context$currentModul","currentModule","chapters","nextIndex","currentChapterIndex","_context$setCurrentCh","length","setCurrentChapterIndex","moduleType","_context$user$wholeDa","response","axios","post","URLSITE","_response$data$paidMo","status","data","paidModule","some","mod","checkModuleAccess","highlightBlock","moduleData","getModuleById","Error","get","message","chapterIdNum","fallbackChapter","find","c","description","sections","codeExamples","progressResponse","progressErr","isBookmarked","JSON","parse","localStorage","getItem","bookmark","isCompleted","getChapterProgress","fetchModuleAndChapter","toggleDrawer","showSnackbar","severity","arguments","undefined","Box","sx","display","justifyContent","alignItems","CircularProgress","py","Typography","variant","Button","component","Link","mt","currentIndex","findIndex","ch","_Fragment","SEO","Drawer","anchor","open","onClose","p","mb","Divider","isCurrentChapter","ListItem","button","selected","borderRadius","bgcolor","CheckCircle","mr","ListItemText","primary","primaryTypographyProps","fontWeight","gap","startIcon","updatedContent","isNewEditorUsed","put","handleCancelEditing","RichTextEditorForEditing","IconButton","Menu","Breadcrumbs","textDecoration","ArrowBack","MenuBook","Chip","icon","label","ml","Edit","handleStartEditing","innerHTML","_chapterContent$secti","combinedContent","section","markChapterCompleted","updateChapterProgress","Bookmark","BookmarkBorder","toggleChapterBookmark","bookmarkedChapters","bookmarkData","toString","moduleTitle","chapterTitle","timestamp","Date","toISOString","updatedBookmarks","filter","setItem","stringify","push","Paper","elevation","overflow","pb","gutterBottom","estimatedTime","DOMPurify","sanitize","FORBID_ATTR","example","language","code","explanation","ChapterContent","onQuizCompletion","passed","onNextChapter","NavigateBefore","navigateToPrevChapter","_context$currentModul2","prevIndex","_context$setCurrentCh2","endIcon","NavigateNext","Snackbar","autoHideDuration","Alert","chapterKey","updateModuleProgress","allChapterKeys","Object","keys","key","startsWith","completedChapters","percentage","Math","round","markQuizCompleted","score","quizKey","_chapter$quiz","_chapter$quiz2","searchParams","useSearchParams","expandedSection","setExpandedSection","quizAnswers","setQuizAnswers","quizSubmitted","setQuizSubmitted","bookmarked","setBookmarked","sectionProgress","setSectionProgress","activeTab","setActiveTab","quizScore","setQuizScore","quizPassed","setQuizPassed","hasQuiz","Boolean","quiz","questions","quizQuestions","quizTitle","quizDescription","savedBookmarks","savedProgress","progressObj","completedSections","values","val","totalSections","Array","isArray","tabParam","hasNoSections","borderBottom","borderColor","px","Accordion","expanded","sectionId","updatedProgress","handleSectionChange","position","AccordionSummary","expandIcon","ExpandMore","stopPropagation","includes","toggleBookmark","AccordionDetails","Grid","container","spacing","bookmarkId","s","item","xs","sm","md","cursor","_document$getElementB","getElementById","scrollIntoView","behavior","examples","paragraph","fontFamily","whiteSpace","overflowX","videos","video","Card","flexDirection","CardActionArea","rel","CardMedia","image","thumbnail","alt","top","background","transition","PlayArrow","Quiz","toFixed","question","index","_question$options$que","questionId","FormControl","RadioGroup","handleAnswerChange","options","option","optIndex","optionId","optionText","text","FormControlLabel","control","Radio","correctAnswer","Check","fontStyle","resetQuiz","Assignment","handleQuizSubmit","correctCount","totalQuestions","handleNextChapter","ArrowForward"],"sourceRoot":""}