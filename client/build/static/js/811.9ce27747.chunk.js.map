{"version":3,"file":"static/js/811.9ce27747.chunk.js","mappings":"uPAMA,MAuDA,EAvDmBA,KACjB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACV,KAACC,EAAI,QAACC,IAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAE9BC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,iBAChCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,WAoCrC,OAlCAG,EAAAA,EAAAA,YAAU,KA0BJb,EAzBgBc,WAClB,IACE,MAAMC,QAAYC,EAAAA,EAAMC,KAAK,GAAGC,EAAAA,0BAAiC,CAC/DlB,UAGiB,MAAfe,EAAIJ,SACJQ,QAAQC,IAAIL,GACdN,EAAW,wCACXG,EAAU,WACVS,aAAaC,QAAQ,gBAAiBP,EAAIQ,KAAKvB,OACjDG,EAAQ,CACNqB,KAAKT,EAAIQ,KAAKC,KACdC,MAAMV,EAAIQ,KAAKE,QAEjBnB,EAAS,KAGX,CAAE,MAAOoB,GACPP,QAAQQ,MAAMD,GACdjB,EAAW,oCACXG,EAAU,QACZ,GAIAgB,IAEAnB,EAAW,6BACXG,EAAU,SACZ,GACC,CAACZ,EAAOM,KAGTuB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0EAAyEC,UACtFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gEAA+DC,SAAA,EAC5EF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAAyBC,SAAC,wBACxCF,EAAAA,EAAAA,KAAA,KAAGC,UAAW,YAAsB,YAAXnB,EAAuB,iBAAmB,gBAAiBoB,SACjFvB,IAES,YAAXG,IAAwBkB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,gCAEjE,C","sources":["pages/VerifyToken.jsx"],"sourcesContent":["import { useEffect, useState,useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport URLSITE from '../constant';\nimport {AuthContext} from \"../context/AuthContext\"\n\nconst VerifyPage = () => {\n  const { token } = useParams();\n   const  {user,setUser} = useContext(AuthContext);\n   \n  const navigate = useNavigate();\n  const [message, setMessage] = useState('Verifying...');\n  const [status, setStatus] = useState('loading'); // loading, success, error\n\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n        const res = await axios.post(`${URLSITE}/api/auth/verify-email`, {\n          token,\n        });\n\n        if (res.status === 200) {\n            console.log(res)\n          setMessage('✅ Your email has been verified!');\n          setStatus('success');\n          localStorage.setItem('VeriGeektoken', res.data.token);\n        setUser({\n          name:res.data.name,\n          email:res.data.email\n        })\n        navigate('/')\n        //   setTimeout(() => navigate('/login'), 2000); // Redirect after 2 seconds\n        }\n      } catch (err) {\n        console.error(err);\n        setMessage('❌ Invalid or expired token.');\n        setStatus('error');\n      }\n    };\n\n    if (token) {\n      verifyEmail();\n    } else {\n      setMessage('❌ No token provided.');\n      setStatus('error');\n    }\n  }, [token, navigate]);\n\n  return (\n    <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-100 px-4\">\n      <div className=\"bg-white shadow-md rounded-xl p-6 max-w-md w-full text-center\">\n        <h1 className=\"text-2xl font-bold mb-4\">Email Verification</h1>\n        <p className={`text-lg ${status === 'success' ? 'text-green-600' : 'text-red-600'}`}>\n          {message}\n        </p>\n        {status === 'success' && <p className=\"text-sm mt-2 text-gray-500\">Redirecting to login...</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default VerifyPage;\n"],"names":["VerifyPage","token","useParams","user","setUser","useContext","AuthContext","navigate","useNavigate","message","setMessage","useState","status","setStatus","useEffect","async","res","axios","post","URLSITE","console","log","localStorage","setItem","data","name","email","err","error","verifyEmail","_jsx","className","children","_jsxs"],"sourceRoot":""}